{
  "name": "mall",
  "describe": "mall",
  "avatar": "",
  "version": "4.1.1",
  "createdTime": "2022-8-30 20:44:12",
  "updatedTime": "2022-8-30 20:46:04",
  "dbConns": [],
  "profile": {
    "default": {
      "db": "29D1CE08-4C35-4D2D-AAA9-23D93305B52E",
      "dbConn": "AF3773F9-7354-4853-B758-3F301071347D",
      "entityInitFields": [
        {
          "defKey": "TENANT_ID",
          "defName": "租户号",
          "comment": "",
          "type": "",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "refDict": "",
          "uiHint": "",
          "id": "ADB3AD14-6603-43E2-8261-114E32442B5B"
        },
        {
          "defKey": "REVISION",
          "defName": "乐观锁",
          "comment": "",
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "type": "",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "refDict": "",
          "uiHint": "",
          "id": "92BF430E-01FA-4AEF-944F-25A142632654"
        },
        {
          "defKey": "CREATED_BY",
          "defName": "创建人",
          "comment": "",
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "type": "",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "refDict": "",
          "uiHint": "",
          "id": "C8BE2C7A-8251-4ADD-BB4F-411C5754DA62"
        },
        {
          "defKey": "CREATED_TIME",
          "defName": "创建时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "refDict": "",
          "uiHint": "",
          "id": "4E471FD6-3E73-4A90-B660-51598A482409"
        },
        {
          "defKey": "UPDATED_BY",
          "defName": "更新人",
          "comment": "",
          "domain": "16120F75-6AA7-4483-868D-F07F511BB081",
          "type": "",
          "len": 32,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "refDict": "",
          "uiHint": "",
          "id": "0DC24AA9-4CD0-45D8-95CF-FA546BE343AB"
        },
        {
          "defKey": "UPDATED_TIME",
          "defName": "更新时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "type": "",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "refDict": "",
          "uiHint": "",
          "id": "09F64AC4-4DEE-428F-AF64-4C103884E1AC"
        }
      ],
      "entityInitProperties": {
        "partitioned by": "(date string)",
        "row format delimited": "",
        "fields terminated by ','": "",
        "collection items terminated by '-'": "",
        "map keys terminated by ':'": "",
        "store as textfile;": ""
      }
    },
    "javaHome": "",
    "sql": {
      "delimiter": ""
    },
    "dataTypeSupports": [
      {
        "defKey": "MYSQL",
        "id": "29D1CE08-4C35-4D2D-AAA9-23D93305B52E"
      },
      {
        "defKey": "ORACLE",
        "id": "A4E23CB7-BB01-4BD1-9F71-F73F3E15A542"
      },
      {
        "defKey": "SQLServer",
        "id": "BFC87171-C74F-494A-B7C2-76B9C55FACC9"
      },
      {
        "defKey": "PostgreSQL",
        "id": "DFBEC1DD-AA84-456E-BBF3-C95DD0DB2022"
      },
      {
        "defKey": "DB2",
        "id": "89504F5D-94BF-4C9E-8B2E-44F37305FED5"
      },
      {
        "defKey": "DM",
        "id": "0BBCABA5-B8E4-41B0-B8E4-8F5EA6029307"
      },
      {
        "defKey": "GaussDB",
        "id": "592C7013-143D-4E7B-AF64-0D7BF1E28230"
      },
      {
        "defKey": "Kingbase",
        "id": "77BD85E5-9D0D-4096-8427-CBA306FC9C6A"
      },
      {
        "defKey": "MaxCompute",
        "id": "11D1FB71-A587-4217-89BA-611B8A1F83E0"
      },
      {
        "defKey": "SQLite",
        "id": "B363BE0B-F852-49B8-9B2E-F6D2174DEAC1"
      },
      {
        "defKey": "JAVA",
        "id": "797A1496-D649-4261-89B4-544132EC3F36"
      },
      {
        "defKey": "JavaMybatis",
        "id": "895CFD1D-4273-4D32-A2C4-CAC70200AB5B"
      },
      {
        "defKey": "JavaMybatisPlus",
        "id": "A2EE7B4A-CE62-4290-B00C-B26C1BF18073"
      },
      {
        "defKey": "C#",
        "id": "F3AC2415-E86B-40C6-9FEB-F4B7937D2C30"
      },
      {
        "defKey": "Hive",
        "id": "81CCA482-3F4D-4EAC-8CF9-F5E7BC098AD2"
      },
      {
        "defKey": "Golang",
        "id": "B91D99E0-9B7C-416C-8737-B760957DAF09"
      }
    ],
    "codeTemplates": [
      {
        "type": "appCode",
        "applyFor": "797A1496-D649-4261-89B4-544132EC3F36",
        " JpaBean": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.entity;\n$blankline\nimport io.swagger.annotations.ApiModel;\nimport io.swagger.annotations.ApiModelProperty;\nimport javax.persistence.*;\nimport java.io.Serializable;\nimport java.util.Date;\n$blankline\n\n /**\n * {{=it.entity.defName}};{{=it.entity.comment}}\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@ApiModel(value = \"{{=it.entity.defName}}\",description = \"{{=it.entity.comment}}\")\n@Table(name=\"{{=it.entity.defKey}}\")\npublic class {{=beanClass}} implements Serializable,Cloneable{\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    {{? field.primaryKey }}\n    @Id\n    @GeneratedValue\n    {{?}}\n    @ApiModelProperty(name = \"{{=field.defName}}\",notes = \"{{=field.comment}}\")\n    private {{=field.type}} {{=it.func.camel(field.defKey,false)}} ;\n{{~}}\n$blankline\n\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    public {{=field.type}} get{{=it.func.camel(field.defKey,true)}}(){\n        return this.{{=it.func.camel(field.defKey,false)}};\n    }\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    public void set{{=it.func.camel(field.defKey,true)}}({{=field.type}} {{= it.func.camel(field.defKey,false) }}){\n        this.{{=it.func.camel(field.defKey,false)}}={{=it.func.camel(field.defKey,false)}};\n    }\n{{~}}\n}"
      },
      {
        "type": "appCode",
        "applyFor": "F3AC2415-E86B-40C6-9FEB-F4B7937D2C30",
        "Default": "using System;\nusing System.Collections.Generic;\n\n$blankline\n{{\n    var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n}}\n/*\n * @author : http://www.chiner.com.cn\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n * @desc : {{=it.func.join(it.entity.defName,it.entity.comment,'-')}}\n */\nnamespace PDManer.Application\n{\n    public partial class {{=it.func.camel(it.entity.defKey,true) }}\n    {\n    \n        {{~it.entity.fields:field:index}}\n        /// <summary>\n        /// {{=it.func.join(field.defName,field.comment,';')}}\n        /// </summary>\n        public {{=field.type}} {{=it.func.camel(field.defKey,true)}} { get; set; }\n        $blankline\n        {{~}}\n        \n    }\n}",
        "SqlSugar": "using System;\nusing System.Collections.Generic;\nusing SqlSugar;\n\n$blankline\n{{\n    var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    var sqlSugartable='[SugarTable(\"{{=it.entity.defKey}}\", TableDescription = \"{{=it.func.join(it.entity.defName,it.entity.comment,';')}}\")]';\n}}\n/*\n * @author : xkdong@163.com\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n * @desc : {{=it.func.join(it.entity.defName,it.entity.comment,'-')}}\n */\nnamespace Model.DBModel\n{\n    /// <summary>\n    /// {{=it.func.join(it.entity.defName,it.entity.comment,';')}}\n    /// </summary>\n    {{=sqlSugartable}}\n    public class {{=it.entity.defKey}}\n    {\n        {{~it.entity.fields:field:index}}\n        /// <summary>\n        /// {{=it.func.join(field.defName,field.comment,';')}}\n        /// </summary>\n        {{? field.primaryKey }}\n        [SugarColumn(IsIdentity = true, IsPrimaryKey = true)]\n        {{?}}\n        public {{=field.type}} {{=it.func.camel(field.defKey,true)}}{ get; set; }\n        $blankline\n        {{~}}\n    }\n}"
      },
      {
        "applyFor": "895CFD1D-4273-4D32-A2C4-CAC70200AB5B",
        "type": "appCode",
        "Controller": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.controller;\n$blankline\nimport io.swagger.annotations.Api;\nimport io.swagger.annotations.ApiOperation;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.data.domain.Page;\nimport org.springframework.data.domain.PageRequest;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.web.bind.annotation.*;\nimport {{=pkgName}}.entity.{{=beanClass}};\nimport {{=pkgName}}.service.{{=serviceClass}};\n$blankline\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表控制层\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@Api(tags = \"{{=it.entity.defName}}对象功能接口\")\n@RestController\n@RequestMapping(\"/{{=it.func.camel(it.entity.defKey,false)}}\")\npublic class {{=beanClass}}Controller{\n    @Autowired\n    private {{=serviceClass}} {{=serviceVarName}};\n    $blankline\n    /** \n     * 通过ID查询单条数据 \n     *\n     * @param {{=pkVarName}} 主键\n     * @return 实例对象\n     */\n    @ApiOperation(\"通过ID查询单条数据\")\n    @GetMapping(\"{{{=it.func.camel(pkVarName,false)}}}\")\n    public ResponseEntity<{{=beanClass}}> queryById({{=pkDataType}} {{=pkVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.queryById({{=pkVarName}}));\n    }\n    $blankline\n    /** \n     * 分页查询\n     *\n     * @param {{=beanVarName}} 筛选条件\n     * @param pageRequest 分页对象\n     * @return 查询结果\n     */\n    @ApiOperation(\"分页查询\")\n    @GetMapping\n    public ResponseEntity<Page<{{=beanClass}}>> paginQuery({{=beanClass}} {{=beanVarName}}, PageRequest pageRequest){\n        return ResponseEntity.ok({{=serviceVarName}}.paginQuery({{=beanVarName}}, pageRequest));\n    }\n    $blankline\n    /** \n     * 新增数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    @ApiOperation(\"新增数据\")\n    @PostMapping\n    public ResponseEntity<{{=beanClass}}> add({{=beanClass}} {{=beanVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.insert({{=beanVarName}}));\n    }\n    $blankline\n    /** \n     * 更新数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    @ApiOperation(\"更新数据\")\n    @PutMapping\n    public ResponseEntity<{{=beanClass}}> edit({{=beanClass}} {{=beanVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.update({{=beanVarName}}));\n    }\n    $blankline\n    /** \n     * 通过主键删除数据\n     *\n     * @param {{=pkVarName}} 主键\n     * @return 是否成功\n     */\n    @ApiOperation(\"通过主键删除数据\")\n    @DeleteMapping\n    public ResponseEntity<Boolean> deleteById({{=pkDataType}} {{=pkVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.deleteById({{=pkVarName}}));\n    }\n}",
        "Service": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.service;\n$blankline\nimport org.springframework.data.domain.Page;\nimport org.springframework.data.domain.PageRequest;\nimport {{=pkgName}}.entity.{{=beanClass}};\n$blankline\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表服务接口\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\npublic interface {{=serviceClass}}{\n    /** \n     * 通过ID查询单条数据 \n     *\n     * @param {{=pkVarName}} 主键\n     * @return 实例对象\n     */\n    {{=beanClass}} queryById({{=pkDataType}} {{=pkVarName}});\n    \n    /** \n     * 分页查询\n     *\n     * @param {{=beanVarName}} 筛选条件\n     * @param pageRequest 分页对象\n     * @return 查询结果\n     */\n    Page<{{=beanClass}}> paginQuery({{=beanClass}} {{=beanVarName}}, PageRequest pageRequest);\n\n    /** \n     * 新增数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    {{=beanClass}} insert({{=beanClass}} {{=beanVarName}});\n\n    \n    /** \n     * 更新数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    {{=beanClass}} update({{=beanClass}} {{=beanVarName}});\n\n    /** \n     * 通过主键删除数据\n     *\n     * @param {{=pkVarName}} 主键\n     * @return 是否成功\n     */\n    boolean deleteById({{=pkDataType}} {{=pkVarName}});\n}",
        "ServiceImpl": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkVarNameU = \"UndefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkVarNameU = it.func.camel(field.defKey,true);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    var mapperName = beanVarName+'Mapper';\n    \n}}package {{=pkgName}}.service.impl;\n$blankline\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\nimport org.springframework.data.domain.Page;\nimport org.springframework.data.domain.PageImpl;\nimport org.springframework.data.domain.PageRequest;\nimport {{=pkgName}}.entity.{{=beanClass}};\nimport {{=pkgName}}.mapper.{{=beanClass}}Mapper;\nimport {{=pkgName}}.service.{{=serviceClass}};\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表服务实现类\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@Service\npublic class {{=serviceClass}}Impl implements {{=serviceClass}}{\n    @Autowired\n    private {{=beanClass}}Mapper {{=mapperName}};\n    $blankline\n    /** \n     * 通过ID查询单条数据 \n     *\n     * @param {{=pkVarName}} 主键\n     * @return 实例对象\n     */\n    public {{=beanClass}} queryById({{=pkDataType}} {{=pkVarName}}){\n        return {{=mapperName}}.queryById({{=pkVarName}});\n    }\n    $blankline\n    /** \n     * 分页查询\n     *\n     * @param {{=beanVarName}} 筛选条件\n     * @param pageRequest 分页对象\n     * @return 查询结果\n     */\n    public Page<{{=beanClass}}> paginQuery({{=beanClass}} {{=beanVarName}}, PageRequest pageRequest){\n        long total = {{=mapperName}}.count({{=beanVarName}});\n        return new PageImpl<>({{=mapperName}}.queryAllByLimit({{=beanVarName}}, pageRequest), pageRequest, total);\n    }\n    $blankline\n    /** \n     * 新增数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    public {{=beanClass}} insert({{=beanClass}} {{=beanVarName}}){\n        {{=mapperName}}.insert({{=beanVarName}});\n        return {{=beanVarName}};\n    }\n    $blankline\n    /** \n     * 更新数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    public {{=beanClass}} update({{=beanClass}} {{=beanVarName}}){\n        {{=mapperName}}.update({{=beanVarName}});\n        return queryById({{=beanVarName}}.get{{=pkVarNameU}}());\n    }\n    $blankline\n    /** \n     * 通过主键删除数据\n     *\n     * @param {{=pkVarName}} 主键\n     * @return 是否成功\n     */\n    public boolean deleteById({{=pkDataType}} {{=pkVarName}}){\n        int total = {{=mapperName}}.deleteById({{=pkVarName}});\n        return total > 0;\n    }\n}",
        "Mapper": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.mapper;\n$blankline\nimport java.util.List;\nimport org.apache.ibatis.annotations.Mapper;\nimport org.apache.ibatis.annotations.Param;\nimport org.springframework.data.domain.Pageable;\nimport {{=pkgName}}.entity.{{=beanClass}};\n$blankline\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表数据库访问层\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@Mapper\npublic interface {{=beanClass}}Mapper{\n    /** \n     * 通过ID查询单条数据 \n     *\n     * @param {{=pkVarName}} 主键\n     * @return 实例对象\n     */\n    {{=beanClass}} queryById({{=pkDataType}} {{=pkVarName}});\n    \n    /** \n     * 分页查询指定行数据\n     *\n     * @param {{=beanVarName}} 查询条件\n     * @param pageable 分页对象\n     * @return 对象列表\n     */\n    List<{{=beanClass}}> queryAllByLimit({{=beanClass}} {{=beanVarName}}, @Param(\"pageable\") Pageable pageable);\n\n    /** \n     * 统计总行数\n     *\n     * @param {{=beanVarName}} 查询条件\n     * @return 总行数\n     */\n    long count({{=beanClass}} {{=beanVarName}});\n\n    /** \n     * 新增数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 影响行数\n     */\n    int insert({{=beanClass}} {{=beanVarName}});\n\n    /** \n     * 批量新增数据\n     *\n     * @param entities List<{{=beanClass}}> 实例对象列表\n     * @return 影响行数\n     */\n    int insertBatch(@Param(\"entities\") List<{{=beanClass}}> entities);\n    \n    /** \n     * 批量新增或按主键更新数据\n     *\n     * @param entities List<{{=beanClass}}> 实例对象列表\n     * @return 影响行数\n     */\n    int insertOrUpdateBatch(@Param(\"entities\") List<{{=beanClass}}> entities);\n    \n    /** \n     * 更新数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 影响行数\n     */\n    int update({{=beanClass}} {{=beanVarName}});\n\n    /** \n     * 通过主键删除数据\n     *\n     * @param {{=pkVarName}} 主键\n     * @return 影响行数\n     */\n    int deleteById({{=pkDataType}} {{=pkVarName}});\n}",
        "Mapper.xml": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    var pkField = \"UNDEFINED_ID\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkField = field.defKey;\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"{{=pkgName}}.mapper.{{=beanClass}}Mapper\">\n    <resultMap type=\"{{=pkgName}}.entity.{{=beanClass}}\" id=\"{{=beanClass}}Map\">\n    {{~it.entity.fields:field:index}}\n        <result property=\"{{=it.func.camel(field.defKey,false)}}\" column=\"{{=field.defKey}}\" jdbcType=\"{{=field.dbType}}\"/>\n    {{~}}\n    </resultMap>\n    $blankline\n    <!-- 通过ID查询单条数据 -->\n    <select id=\"queryById\" resultMap=\"{{=beanClass}}Map\">\n        select\n            {{=it.entity.fields.map(function(e,i){return e.defKey}).join(',')}}\n        from {{=it.entity.defKey}}\n        where {{=pkField}} = #{{{=pkVarName}}}\n    </select>\n    $blankline\n    <!--分页查询指定行数据-->\n    <select id=\"queryAllByLimit\" resultMap=\"{{=beanClass}}Map\">\n        select\n            {{=it.entity.fields.map(function(e,i){return e.defKey}).join(',')}}\n        from {{=it.entity.defKey}}\n        <where>\n        {{~it.entity.fields:field:index}}\n            <if test=\"{{=it.func.camel(field.defKey,false)}} != null and {{=it.func.camel(field.defKey,false)}} != ''\">\n                and {{=field.defKey}} = #{{{=it.func.camel(field.defKey,false)}}}\n            </if>\n        {{~}}\n        </where>\n        limit #{pageable.offset}, #{pageable.pageSize}\n    </select>\n    $blankline\n    <!--统计总行数-->\n    <select id=\"count\" resultType=\"java.lang.Long\">\n        select count(1)\n        from {{=it.entity.defKey}}\n        <where>\n        {{~it.entity.fields:field:index}}\n            <if test=\"{{=it.func.camel(field.defKey,false)}} != null and {{=it.func.camel(field.defKey,false)}} != ''\">\n                and {{=field.defKey}} = #{{{=it.func.camel(field.defKey,false)}}}\n            </if>\n        {{~}}\n        </where>\n    </select>\n    $blankline\n    <!--新增数据-->\n    <insert id=\"insert\" keyProperty=\"{{=pkField}}\" useGeneratedKeys=\"true\">\n        insert into {{=it.entity.defKey}}({{=it.entity.fields.map(function(e,i){return e.defKey}).join(',')}})\n        values ({{=it.entity.fields.map(function(e,i){return '#{'+it.func.camel(e.defKey,false)+'}'}).join(',')}})\n    </insert>\n    $blankline\n    <!-- 批量新增数据 -->\n    <insert id=\"insertBatch\" keyProperty=\"{{=pkField}}\" useGeneratedKeys=\"true\">\n        insert into {{=it.entity.defKey}}({{=it.entity.fields.map(function(e,i){return e.defKey}).join(',')}})\n        values\n        <foreach collection=\"entities\" item=\"entity\" separator=\",\">\n            ({{=it.entity.fields.map(function(e,i){return '#{entity.'+it.func.camel(e.defKey,false)+'}'}).join(',')}})\n        </foreach>\n    </insert>\n    $blankline\n    <!-- 批量新增或按主键更新数据 -->\n    <insert id=\"insertOrUpdateBatch\" keyProperty=\"{{=pkField}}\" useGeneratedKeys=\"true\">\n        insert into {{=it.entity.defKey}}({{=it.entity.fields.map(function(e,i){return e.defKey}).join(',')}})\n        values\n        <foreach collection=\"entities\" item=\"entity\" separator=\",\">\n            ({{=it.entity.fields.map(function(e,i){return '#{entity.'+it.func.camel(e.defKey,false)+'}'}).join(',')}})\n        </foreach>\n        on duplicate key update\n        {{=it.entity.fields.map(function(e,i){return e.defKey + '=values('+e.defKey+')'}).join(',\\n\\t\\t')}}\n    </insert>\n    $blankline\n    <!-- 更新数据 -->\n    <update id=\"update\">\n        update {{=it.entity.defKey}}\n        <set>\n        {{~it.entity.fields:field:index}}\n            <if test=\"{{=it.func.camel(field.defKey,false)}} != null and {{=it.func.camel(field.defKey,false)}} != ''\">\n                {{=field.defKey}} = #{{{=it.func.camel(field.defKey,false)}}},\n            </if>\n        {{~}}\n        </set>\n        where {{=pkField}} = #{{{=pkVarName}}}\n    </update>\n    $blankline\n    <!--通过主键删除-->\n    <delete id=\"deleteById\">\n        delete from {{=it.entity.defKey}} where {{=pkField}} = #{{{=pkVarName}}}\n    </delete>\n</mapper>\n\n",
        "Entity": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.entity;\n$blankline\nimport io.swagger.annotations.ApiModel;\nimport io.swagger.annotations.ApiModelProperty;\nimport java.io.Serializable;\nimport java.util.Date;\n$blankline\n\n /**\n * {{=it.entity.defName}};{{=it.entity.comment}}\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@ApiModel(value = \"{{=it.entity.defName}}\",description = \"{{=it.entity.comment}}\")\npublic class {{=beanClass}} implements Serializable,Cloneable{\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    @ApiModelProperty(name = \"{{=field.defName}}\",notes = \"{{=field.comment}}\")\n    private {{=field.type}} {{=it.func.camel(field.defKey,false)}} ;\n{{~}}\n$blankline\n\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    public {{=field.type}} get{{=it.func.camel(field.defKey,true)}}(){\n        return this.{{=it.func.camel(field.defKey,false)}};\n    }\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    public void set{{=it.func.camel(field.defKey,true)}}({{=field.type}} {{= it.func.camel(field.defKey,false) }}){\n        this.{{=it.func.camel(field.defKey,false)}}={{=it.func.camel(field.defKey,false)}};\n    }\n{{~}}\n}"
      },
      {
        "applyFor": "A2EE7B4A-CE62-4290-B00C-B26C1BF18073",
        "type": "appCode",
        "Controller": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.controller;\n$blankline\nimport java.util.List;\nimport io.swagger.annotations.Api;\nimport io.swagger.annotations.ApiOperation;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.data.domain.PageImpl;\nimport org.springframework.data.domain.PageRequest;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.web.bind.annotation.*;\nimport {{=pkgName}}.entity.{{=beanClass}};\nimport {{=pkgName}}.service.{{=serviceClass}};\n$blankline\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表控制层\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@Api(tags = \"{{=it.entity.defName}}对象功能接口\")\n@RestController\n@RequestMapping(\"/{{=it.func.camel(it.entity.defKey,false)}}\")\npublic class {{=beanClass}}Controller{\n    @Autowired\n    private {{=serviceClass}} {{=serviceVarName}};\n    $blankline\n    /** \n     * 通过ID查询单条数据 \n     *\n     * @param {{=pkVarName}} 主键\n     * @return 实例对象\n     */\n    @ApiOperation(\"通过ID查询单条数据\")\n    @GetMapping(\"{{{=it.func.camel(pkVarName,false)}}}\")\n    public ResponseEntity<{{=beanClass}}> queryById({{=pkDataType}} {{=pkVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.queryById({{=pkVarName}}));\n    }\n    $blankline\n    /** \n     * 分页查询\n     *\n     * @param {{=beanVarName}} 筛选条件\n     * @param pageRequest 分页对象\n     * @return 查询结果\n     */\n    @ApiOperation(\"分页查询\")\n    @GetMapping\n    public ResponseEntity<PageImpl<{{=beanClass}}>> paginQuery({{=beanClass}} {{=beanVarName}}, PageRequest pageRequest){\n        //1.分页参数\n        long current = pageRequest.getPageNumber();\n        long size = pageRequest.getPageSize();\n\n        //2.分页查询\n        /*把Mybatis的分页对象做封装转换，MP的分页对象上有一些SQL敏感信息，还是通过spring的分页模型来封装数据吧*/\n        com.baomidou.mybatisplus.extension.plugins.pagination.Page<{{=beanClass}}> pageResult = {{=serviceVarName}}.paginQuery({{=beanVarName}}, current,size);\n\n        //3. 分页结果组装\n        List<{{=beanClass}}> dataList = pageResult.getRecords();\n        long total = pageResult.getTotal();\n        PageImpl<{{=beanClass}}> retPage = new PageImpl<{{=beanClass}}>(dataList,pageRequest,total);\n        return ResponseEntity.ok(retPage);\n    }\n    $blankline\n    /** \n     * 新增数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    @ApiOperation(\"新增数据\")\n    @PostMapping\n    public ResponseEntity<{{=beanClass}}> add({{=beanClass}} {{=beanVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.insert({{=beanVarName}}));\n    }\n    $blankline\n    /** \n     * 更新数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    @ApiOperation(\"更新数据\")\n    @PutMapping\n    public ResponseEntity<{{=beanClass}}> edit({{=beanClass}} {{=beanVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.update({{=beanVarName}}));\n    }\n    $blankline\n    /** \n     * 通过主键删除数据\n     *\n     * @param {{=pkVarName}} 主键\n     * @return 是否成功\n     */\n    @ApiOperation(\"通过主键删除数据\")\n    @DeleteMapping\n    public ResponseEntity<Boolean> deleteById({{=pkDataType}} {{=pkVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.deleteById({{=pkVarName}}));\n    }\n}",
        "Service": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.service;\n$blankline\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\nimport {{=pkgName}}.entity.{{=beanClass}};\n$blankline\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表服务接口\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\npublic interface {{=serviceClass}}{\n    $blankline\n    /** \n     * 通过ID查询单条数据 \n     *\n     * @param {{=pkVarName}} 主键\n     * @return 实例对象\n     */\n    {{=beanClass}} queryById({{=pkDataType}} {{=pkVarName}});\n    $blankline\n    /**\n     * 分页查询\n     *\n     * @param {{=beanVarName}} 筛选条件\n     * @param current 当前页码\n     * @param size  每页大小\n     * @return\n     */\n    Page<{{=beanClass}}> paginQuery({{=beanClass}} {{=beanVarName}}, long current, long size);\n\n    /** \n     * 新增数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    {{=beanClass}} insert({{=beanClass}} {{=beanVarName}});\n\n    \n    /** \n     * 更新数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    {{=beanClass}} update({{=beanClass}} {{=beanVarName}});\n\n    /** \n     * 通过主键删除数据\n     *\n     * @param {{=pkVarName}} 主键\n     * @return 是否成功\n     */\n    boolean deleteById({{=pkDataType}} {{=pkVarName}});\n}",
        "ServiceImpl": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkVarNameU = \"UndefinedId\";\n    var pkFieldKey = \"UNDEFINED\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkFieldKey = field.defKey;\n            pkVarName = it.func.camel(field.defKey,false);\n            pkVarNameU = it.func.camel(field.defKey,true);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    var mapperName = beanVarName+'Mapper';\n    \n}}package {{=pkgName}}.service.impl;\n$blankline\nimport cn.hutool.core.util.StrUtil;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\nimport com.baomidou.mybatisplus.core.metadata.IPage;\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\nimport com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;\nimport com.baomidou.mybatisplus.extension.conditions.update.LambdaUpdateChainWrapper;\n\nimport {{=pkgName}}.entity.{{=beanClass}};\nimport {{=pkgName}}.mapper.{{=beanClass}}Mapper;\nimport {{=pkgName}}.service.{{=serviceClass}};\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表服务实现类\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@Service\npublic class {{=serviceClass}}Impl implements {{=serviceClass}}{\n    @Autowired\n    private {{=beanClass}}Mapper {{=mapperName}};\n    $blankline\n    /** \n     * 通过ID查询单条数据 \n     *\n     * @param {{=pkVarName}} 主键\n     * @return 实例对象\n     */\n    public {{=beanClass}} queryById({{=pkDataType}} {{=pkVarName}}){\n        return {{=mapperName}}.selectById({{=pkVarName}});\n    }\n    $blankline\n    /**\n     * 分页查询\n     *\n     * @param {{=beanVarName}} 筛选条件\n     * @param current 当前页码\n     * @param size  每页大小\n     * @return\n     */\n    public Page<{{=beanClass}}> paginQuery({{=beanClass}} {{=beanVarName}}, long current, long size){\n        //1. 构建动态查询条件\n        LambdaQueryWrapper<{{=beanClass}}> queryWrapper = new LambdaQueryWrapper<>();\n        {{~it.entity.fields.filter(function(e){return e[\"type\"]===\"String\"&&e.defKey !== pkFieldKey}):field:index}}\n        if(StrUtil.isNotBlank({{=beanVarName}}.get{{=it.func.camel(field.defKey,true)}}())){\n            queryWrapper.eq({{=beanClass}}::get{{=it.func.camel(field.defKey,true)}}, {{=beanVarName}}.get{{=it.func.camel(field.defKey,true)}}());\n        }\n        {{~}}\n\n        //2. 执行分页查询\n        Page<{{=beanClass}}> pagin = new Page<>(current , size , true);\n        IPage<{{=beanClass}}> selectResult = {{=mapperName}}.selectByPage(pagin , queryWrapper);\n        pagin.setPages(selectResult.getPages());\n        pagin.setTotal(selectResult.getTotal());\n        pagin.setRecords(selectResult.getRecords());\n\n        //3. 返回结果\n        return pagin;\n    }\n    $blankline\n    /** \n     * 新增数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    public {{=beanClass}} insert({{=beanClass}} {{=beanVarName}}){\n        {{=mapperName}}.insert({{=beanVarName}});\n        return {{=beanVarName}};\n    }\n    $blankline\n    /** \n     * 更新数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    public {{=beanClass}} update({{=beanClass}} {{=beanVarName}}){\n        //1. 根据条件动态更新\n        LambdaUpdateChainWrapper<{{=beanClass}}> chainWrapper = new LambdaUpdateChainWrapper<{{=beanClass}}>({{=mapperName}});\n        {{~it.entity.fields.filter(function(e){return e[\"type\"]===\"String\"&&e.defKey !== pkFieldKey}):field:index}}\n        if(StrUtil.isNotBlank({{=beanVarName}}.get{{=it.func.camel(field.defKey,true)}}())){\n            chainWrapper.eq({{=beanClass}}::get{{=it.func.camel(field.defKey,true)}}, {{=beanVarName}}.get{{=it.func.camel(field.defKey,true)}}());\n        }\n        {{~}}\n        //2. 设置主键，并更新\n        chainWrapper.set({{=beanClass}}::get{{=pkVarNameU}}, {{=beanVarName}}.get{{=pkVarNameU}}());\n        boolean ret = chainWrapper.update();\n        //3. 更新成功了，查询最最对象返回\n        if(ret){\n            return queryById({{=beanVarName}}.get{{=pkVarNameU}}());\n        }else{\n            return {{=beanVarName}};\n        }\n    }\n    $blankline\n    /** \n     * 通过主键删除数据\n     *\n     * @param {{=pkVarName}} 主键\n     * @return 是否成功\n     */\n    public boolean deleteById({{=pkDataType}} {{=pkVarName}}){\n        int total = {{=mapperName}}.deleteById({{=pkVarName}});\n        return total > 0;\n    }\n}",
        "Mapper": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.mapper;\n$blankline\n\nimport com.baomidou.mybatisplus.core.conditions.Wrapper;\nimport com.baomidou.mybatisplus.core.mapper.BaseMapper;\nimport com.baomidou.mybatisplus.core.metadata.IPage;\nimport com.baomidou.mybatisplus.core.toolkit.Constants;\nimport org.apache.ibatis.annotations.Mapper;\nimport org.apache.ibatis.annotations.Param;\nimport {{=pkgName}}.entity.{{=beanClass}};\n$blankline\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表数据库访问层\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@Mapper\npublic interface {{=beanClass}}Mapper  extends BaseMapper<{{=beanClass}}>{\n    /** \n     * 分页查询指定行数据\n     *\n     * @param page 分页参数\n     * @param wrapper 动态查询条件\n     * @return 分页对象列表\n     */\n    IPage<{{=beanClass}}> selectByPage(IPage<{{=beanClass}}> page , @Param(Constants.WRAPPER) Wrapper<{{=beanClass}}> wrapper);\n}",
        "Mapper.xml": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    var pkField = \"UNDEFINED_ID\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkField = field.defKey;\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n$blankline\n\n<mapper namespace=\"{{=pkgName}}.mapper.{{=beanClass}}Mapper\">\n     <select id=\"selectByPage\" resultType=\"{{=pkgName}}.entity.{{=beanClass}}\">\n        select * from user ${ew.customSqlSegment}\n    </select>\n</mapper>\n\n",
        "Entity": "{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.entity;\n$blankline\nimport io.swagger.annotations.ApiModel;\nimport io.swagger.annotations.ApiModelProperty;\nimport com.baomidou.mybatisplus.annotation.TableName;\nimport com.baomidou.mybatisplus.annotation.TableId;\nimport java.io.Serializable;\nimport java.util.Date;\n$blankline\n\n /**\n * {{=it.entity.defName}};{{=it.entity.comment}}\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@ApiModel(value = \"{{=it.entity.defName}}\",description = \"{{=it.entity.comment}}\")\n@TableName(\"{{=it.entity.defKey}}\")\npublic class {{=beanClass}} implements Serializable,Cloneable{\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    @ApiModelProperty(name = \"{{=field.defName}}\",notes = \"{{=field.comment}}\")\n    {{? field.primaryKey }}\n    @TableId\n    {{?}}\n    private {{=field.type}} {{=it.func.camel(field.defKey,false)}} ;\n{{~}}\n$blankline\n\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    public {{=field.type}} get{{=it.func.camel(field.defKey,true)}}(){\n        return this.{{=it.func.camel(field.defKey,false)}};\n    }\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    public void set{{=it.func.camel(field.defKey,true)}}({{=field.type}} {{= it.func.camel(field.defKey,false) }}){\n        this.{{=it.func.camel(field.defKey,false)}}={{=it.func.camel(field.defKey,false)}};\n    }\n{{~}}\n}"
      },
      {
        "applyFor": "29D1CE08-4C35-4D2D-AAA9-23D93305B52E",
        "type": "dbDDL",
        "createTable": "DROP TABLE IF EXISTS {{=it.entity.defKey}};\nCREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.dbType}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}} {{= field.notNull ? 'NOT NULL' : '' }} {{= field.autoIncrement ? 'AUTO_INCREMENT' : '' }} {{= field.defaultValue ? it.func.join('DEFAULT',field.defaultValue,' ') : '' }} COMMENT '{{=it.func.join(field.defName,field.comment,';')}}' {{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n)  COMMENT = '{{=it.func.join(it.entity.defName,it.entity.comment,';') }}';\n$blankline\n",
        "createView": "CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n",
        "deleteTable": "DROP TABLE IF EXISTS {{=it.entity.defKey}};",
        "createIndex": "{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}",
        "deleteIndex": "{{~ it.entity.indexes:index}}\nDROP INDEX {{=index.defKey}} ;\n{{~}}",
        "message": "{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChanged(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push('代码:'+(before.defKey||'NULL')+'->'+(after.defKey||'NULL'));\n        }\n        if(before.defName !== after.defName){\n            ret.push('显示名称:'+(before.defName||'NULL')+'->'+(after.defName||'NULL'));\n        }\n        if(before.comment !== after.comment){\n            ret.push('说明:'+(before.comment||'NULL')+'->'+(after.comment||'NULL'));\n        }\n        if(ret.length>0){\n            return '    基本信息:\\n\\t'+ret.join('\\n\\t');\n        }\n        return '';\n    };\n    \n    function buildAddedDesc(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        \n        for (let field of fieldAdded) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildRemovedDesc(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        \n        for (let field of fieldRemoved) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildModifiedDesc(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        for (let field1 of fieldModified) { \n            let row = [];\n            let field = field1.before;\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n}}\n\n\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n{{? modifyEntities && modifyEntities.length > 0}}\n/* --------------- 修改表 --------------- */\n{{~ modifyEntities:entity}}\n{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]{{let changeText=baseChanged(entity.data.baseChanged);}}\n{{=baseChanged(entity.data.baseChanged)}}\n    {{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n    修改字段：\n    {{='\\t'}}{{=buildModifiedDesc(entity).join('\\n\\t')}}{{?}}{{\n        /*计算是否调整了属性*/\n        let propAdded = entity.data.propAdded || [];\n        let propRemoved = entity.data.propRemoved || [];\n        let propModified = entity.data.propModified || [];\n        let changed = propAdded.length>0 || propRemoved.length>0 || propModified.length>0;\n        /*计算关联是否调整*/\n        let refEntityAdd = entity.data.refEntityAdd || [];\n        let refEntityRemoved = entity.data.refEntityRemoved || [];\n        let relaArray = [];\n        for (let rela of refEntityAdd) {\n            relaArray.push('建立关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        for (let rela of refEntityRemoved) {\n            relaArray.push('解除关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        /*索引是否修改过*/\n        let indexChanged = entity.data.indexChanged;\n    }}{{=indexChanged?'\\n\\t更改了索引':''}}{{=changed?'\\n\\t更改了属性':''}}{{=relaArray.length>0?('\\n\\t'+relaArray.join('\\n\\t')):''}}\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n    添加字段：\n{{='\\t'}}{{=buildAddedDesc(entity).join('\\n\\t')}}\n{{?}}{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n    删除字段：\n{{='\\t'}}{{=buildRemovedDesc(entity).join('\\n\\t')}}\n{{?}}\n{{~}}\n{{?}}\n",
        "update": "{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChangedDDL(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push('ALTER TABLE '+before.defKey+' RENAME TO '+after.defKey);\n        }\n        let commentText = '';\n        let commentChanged = false;\n        if(before.defName !== after.defName){\n            commentText = after.defName;\n            commentChanged = true;\n        }\n        if(before.comment !== after.comment){\n            commentChanged = true;\n            if(commentText){\n                commentText = (commentText+ ';'+after.comment)\n            }else{\n                commentText = after.comment\n            }\n        }\n        if(commentChanged){\n            ret.push('ALTER TABLE '+after.defKey+' COMMENT \\''+commentText+'\\'');\n        }\n        let baseText = '-- 基本信息:\\n';\n        return baseText+ret.join(';\\n')+';';\n    };\n    \n    function buildAddedDDL(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        if(fieldAdded.length == 0){\n            return '';\n        }\n        \n        let firstDDL = 'ALTER TABLE '+entity.data.baseInfo.defKey;\n        for (let field of fieldAdded) { \n            let ddlItem = 'ADD COLUMN '+field.defKey+' '+field.dbType;\n            /*处理数据类型长度*/\n            if(field.len>0){\n                ddlItem += ('('+field.len);\n                if(parseInt(field.scale)>0){\n                    ddlItem += (','+field.scale);\n                }\n                ddlItem += ')';\n            }\n            if(field.notNull){\n                ddlItem += ' NOT NULL';\n            }\n            if(field.autoIncrement){\n                ddlItem += ' AUTO_INCREMENT';\n            }\n            if(field.defaultValue){\n                ddlItem += (' DEFAULT' + field.defaultValue);\n            }\n            ddlItem += (' COMMENT \\''+field.defName+';'+field.comment+'\\'');\n            \n            if(field.index>0 && field.afterFieldKey){\n                ddlItem += (' AFTER '+field.afterFieldKey);\n            }\n            ret.push(ddlItem);\n        }\n        return firstDDL+'\\n'+ret.join(',\\n');\n    };\n    \n    function buildRemovedDDL(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        if(fieldRemoved.length == 0){\n            return '';\n        }\n        \n        let firstDDL = 'ALTER TABLE '+entity.data.baseInfo.defKey;\n        for (let field of fieldRemoved) { \n            ret.push('DROP '+field.defKey);\n        }\n        return firstDDL+'\\n'+ret.join(',\\n');\n    };\n    \n    function buildModifiedDDL(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        let firstDDL = 'ALTER TABLE '+entity.data.baseInfo.defKey;\n        for (let field of fieldModified) { \n            let changeDDL = '';\n            let before = field.before || {};\n            let after = field.after || {};\n            if(before.defKey === after.defKey){\n                changeDDL += (' MODIFY COLUMN '+after.defKey);\n            }else{\n                changeDDL += (' CHANGE COLUMN '+before.defKey+' '+after.defKey);\n            }\n            changeDDL += (' '+after.dbType);\n            if(after.len>0){\n                changeDDL += ('('+after.len);\n                if(parseInt(field.scale)>0){\n                    changeDDL += (','+field.scale);\n                }\n                changeDDL += ')';\n            }\n            if(after.notNull){\n                changeDDL += ' NOT NULL';\n            }\n            let defaultValue = '';\n            if(after.defaultValue != null && after.defaultValue.length>0){\n                defaultValue = (after.defaultValue);\n            }else{\n                defaultValue = 'NULL';\n            }\n            changeDDL += (' DEFAULT ' + defaultValue);\n            let comment = after.comment||'';\n            changeDDL += (' COMMENT \\''+comment+'\\';');\n            ret.push(firstDDL+' '+changeDDL);\n        }\n        return ret;\n    };\n}}\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=it.func.createDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=it.func.dropDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? modifyEntities && modifyEntities.length > 0}}\n{{~ modifyEntities:entity}}\n/* --------------- 修改表 --------------- */\n-- 修改表：{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]\n{{=baseChangedDDL(entity.data.baseChanged)}}\n{{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n-- 修改字段：\n{{=buildModifiedDDL(entity).join('\\n')}}\n{{?}}{{\n/*索引是否修改过*/\nlet indexChanged = entity.data.indexChanged;\n}}\n{{? indexChanged }}\n{{=it.func.indexRebuildDDL(entity.data.baseInfo,entity.data.newIndexes,entity.data.fullFields,entity['type'])}}\n{{?}}\n\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n-- 添加字段：\n{{=buildAddedDDL(entity)}};\n{{?}}\n\n{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n-- 删除字段：\n{{=buildRemovedDDL(entity)}};\n{{?}}\n{{~}}\n{{?}}"
      },
      {
        "applyFor": "A4E23CB7-BB01-4BD1-9F71-F73F3E15A542",
        "type": "dbDDL",
        "createTable": "CREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}}{{= field.defaultValue ? it.func.join(' DEFAULT ',field.defaultValue,' ') : '' }}{{= field.notNull ? ' NOT NULL' : '' }}{{= field.autoIncrement ? '' : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}COMMENT ON TABLE {{=it.entity.defKey}} IS '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}';{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.defName || field.comment}}COMMENT ON COLUMN {{=it.entity.defKey}}.{{=field.defKey}} IS '{{=it.func.join(field.defName,field.comment,';')}}';{{?}}\n{{~}}",
        "createView": "CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n",
        "deleteTable": "DROP TABLE {{=it.entity.defKey}};",
        "createIndex": "{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}",
        "deleteIndex": "{{~ it.entity.indexes:index}}\nDROP INDEX {{=index.defKey}} ;\n{{~}}",
        "message": "{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChanged(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push('代码:'+(before.defKey||'NULL')+'->'+(after.defKey||'NULL'));\n        }\n        if(before.defName !== after.defName){\n            ret.push('显示名称:'+(before.defName||'NULL')+'->'+(after.defName||'NULL'));\n        }\n        if(before.comment !== after.comment){\n            ret.push('说明:'+(before.comment||'NULL')+'->'+(after.comment||'NULL'));\n        }\n        if(ret.length>0){\n            return '    基本信息:\\n\\t'+ret.join('\\n\\t');\n        }\n        return '';\n    };\n    \n    function buildAddedDesc(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        \n        for (let field of fieldAdded) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildRemovedDesc(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        \n        for (let field of fieldRemoved) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildModifiedDesc(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        for (let field1 of fieldModified) { \n            let row = [];\n            let field = field1.before;\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n}}\n{{? createEntities && createEntities.length > 0}}\n/* -------------------------------------------------- */\n创建表：\n{{~ createEntities:entity}}\n    {{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* -------------------------------------------------- */\n删除表：\n{{~ dropEntities:entity}}\n    {{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n\n{{? modifyEntities && modifyEntities.length > 0}}\n{{~ modifyEntities:entity}}\n/* -------------------------------------------------- */\n修改表：{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]{{let changeText=baseChanged(entity.data.baseChanged);}}\n{{=baseChanged(entity.data.baseChanged)}}\n    {{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n    添加字段：\n    {{='\\t'}}{{=buildAddedDesc(entity).join('\\n\\t')}}\n    {{?}}{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n    删除字段：\n    {{='\\t'}}{{=buildRemovedDesc(entity).join('\\n\\t')}}\n    {{?}}{{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n    修改字段：\n    {{='\\t'}}{{=buildModifiedDesc(entity).join('\\n\\t')}}\n    {{?}}{{\n        /*计算是否调整了属性*/\n        let propAdded = entity.data.propAdded || [];\n        let propRemoved = entity.data.propRemoved || [];\n        let propModified = entity.data.propModified || [];\n        let changed = propAdded.length>0 || propRemoved.length>0 || propModified.length>0;\n        /*计算关联是否调整*/\n        let refEntityAdd = entity.data.refEntityAdd || [];\n        let refEntityRemoved = entity.data.refEntityRemoved || [];\n        let relaArray = [];\n        for (let rela of refEntityAdd) {\n            relaArray.push('\\n\\t建立关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        for (let rela of refEntityRemoved) {\n            relaArray.push('\\n\\t解除关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        /*索引是否修改过*/\n        let indexChanged = entity.data.indexChanged;\n    }}\n{{=indexChanged?'\\n\\t更改了索引':''}}\n{{=changed?'\\n\\t更改了属性':''}}\n{{=relaArray.length>0?relaArray.join(''):''}}\n{{~}}\n{{?}}",
        "update": "{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChangedDDL(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push(`ALTER TABLE ${before.defKey} RENAME TO ${after.defKey}`);\n        }\n        let commentText = '';\n        let commentChanged = false;\n        if(before.defName !== after.defName){\n            commentText = after.defName;\n            commentChanged = true;\n        }\n        if(before.comment !== after.comment){\n            commentChanged = true;\n            if(commentText){\n                commentText = (commentText+ ';'+after.comment)\n            }else{\n                commentText = after.comment\n            }\n        }\n        if(commentChanged){\n            let myText = `COMMENT ON TABLE ${after.defKey} IS '${commentText}'`;\n            ret.push(myText);\n        }\n        let baseText = '-- 基本信息:\\n';\n        return baseText+ret.join(';\\n')+';';\n    };\n    \n    function buildAddedDDL(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        if(fieldAdded.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldAdded) { \n            let ddlItem = `ADD (${field.defKey} ${field.dbType}`;\n            /*处理数据类型长度*/\n            if(field.len>0){\n                ddlItem += ('('+field.len);\n                if(parseInt(field.scale)>0){\n                    ddlItem += (','+field.scale);\n                }\n                ddlItem += ')';\n            }\n            let defaultValue = field.defaultValue;\n            defaultValue = (defaultValue==null)?\"\":(\"\"+defaultValue);\n            if(defaultValue.length>0){\n                ddlItem += (' DEFAULT ' + defaultValue);\n            }\n            if(field.notNull){\n                ddlItem += ' NOT NULL';\n            }\n            ddlItem += ')';\n            ret.push(`${firstDDL} ${ddlItem}`);\n            \n            /*处理字段注释*/\n            let fieldComments = [];\n            if(field.defName != null &&field.defName.length>0){\n                fieldComments.push(field.defName);\n            }\n            if(field.comment != null &&field.comment.length>0){\n                fieldComments.push(field.comment);\n            }\n            let commentText = fieldComments.join(';');\n            if(commentText != null && commentText.length > 0){\n                let commentDDL = `COMMENT ON COLUMN ${entity.data.baseInfo.defKey}.${field.defKey} IS '${commentText}'`;\n                 ret.push(commentDDL);\n            }\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildRemovedDDL(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        if(fieldRemoved.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldRemoved) { \n            ret.push(`${firstDDL} DROP COLUMN ${field.defKey}`);\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildModifiedDDL(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldModified) { \n            let changeDDL = '';\n            let before = field.before || {};\n            let after = field.after || {};\n            if(before.defKey !== after.defKey){\n                let renameText = `ALTER TABLE ${entity.data.baseInfo.defKey} RENAME COLUMN ${before.defKey} TO ${after.defKey};`;\n                ret.push(renameText);\n            }\n            /*如果没有变化，则不生成变更语句*/\n            if(before.dbType === after.dbType \n            && before['len'] === after['len'] \n            && before.scale === after.scale\n            && before.primaryKey === after.primaryKey\n            && before.notNull === after.notNull\n            && before.autoIncrement === after.autoIncrement\n            && before.defaultValue === after.defaultValue){\n                continue;\n            }\n            changeDDL += ('MODIFY ('+after.defKey+'');\n            changeDDL += (' '+after.dbType);\n            if(after.len>0){\n                changeDDL += ('('+after.len);\n                if(parseInt(field.scale)>0){\n                    changeDDL += (','+field.scale);\n                }\n                changeDDL += ')';\n            }\n            let defaultValue = after.defaultValue;\n            defaultValue = (defaultValue==null)?\"\":(\"\"+defaultValue);\n            if(defaultValue.length>0){\n                changeDDL += (' DEFAULT ' + defaultValue);\n            }\n            \n            if(after.notNull){\n                changeDDL += ' NOT NULL';\n            }\n            changeDDL += ')';\n            ret.push(`${firstDDL} ${changeDDL};`);\n        }\n        return ret;\n    };\n}}\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=it.func.createDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=it.func.dropDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? modifyEntities && modifyEntities.length > 0}}\n{{~ modifyEntities:entity}}\n/* --------------- 修改表 --------------- */\n-- 修改表：{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]\n{{=baseChangedDDL(entity.data.baseChanged)}}\n{{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n-- 修改字段：\n{{=buildModifiedDDL(entity).join('\\n')}}\n{{?}}{{\n/*索引是否修改过*/\nlet indexChanged = entity.data.indexChanged;\n}}\n{{? indexChanged }}\n{{=it.func.indexRebuildDDL(entity.data.baseInfo,entity.data.newIndexes,entity.data.fullFields,entity['type'])}}\n{{?}}\n\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n-- 添加字段：\n{{=buildAddedDDL(entity)}};\n{{?}}\n\n{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n-- 删除字段：\n{{=buildRemovedDDL(entity)}};\n{{?}}\n{{~}}\n{{?}}"
      },
      {
        "applyFor": "BFC87171-C74F-494A-B7C2-76B9C55FACC9",
        "type": "dbDDL",
        "createTable": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[{{=it.entity.defKey}}]') AND type in (N'U')) DROP TABLE [dbo].[{{=it.entity.defKey}}];\n\nCREATE TABLE [dbo].[{{=it.entity.defKey}}](\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= field.autoIncrement ? ' IDENTITY(1,1)' : '' }}{{= field.defaultValue ? it.func.join(' DEFAULT ',field.defaultValue,' ') : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}EXEC sp_addextendedproperty 'MS_Description', '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}', 'SCHEMA', dbo, 'table', {{=it.entity.defKey}}, null, null;{{?}}\n{{~it.entity.fields:field:index}}\nEXEC sp_addextendedproperty 'MS_Description', '{{=it.func.join(field.defName,field.comment,';')}}', 'SCHEMA', dbo, 'table', {{=it.entity.defKey}}, 'column', {{=field.defKey}};\n{{~}}\n",
        "createView": "CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n",
        "deleteTable": "IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[{{=it.entity.defKey}}]') AND type in (N'U')) DROP TABLE [dbo].[{{=it.entity.defKey}}];",
        "createIndex": "{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}",
        "deleteIndex": "",
        "message": "{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChanged(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push('代码:'+(before.defKey||'NULL')+'->'+(after.defKey||'NULL'));\n        }\n        if(before.defName !== after.defName){\n            ret.push('显示名称:'+(before.defName||'NULL')+'->'+(after.defName||'NULL'));\n        }\n        if(before.comment !== after.comment){\n            ret.push('说明:'+(before.comment||'NULL')+'->'+(after.comment||'NULL'));\n        }\n        if(ret.length>0){\n            return '    基本信息:\\n\\t'+ret.join('\\n\\t');\n        }\n        return '';\n    };\n    \n    function buildAddedDesc(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        \n        for (let field of fieldAdded) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildRemovedDesc(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        \n        for (let field of fieldRemoved) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildModifiedDesc(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        for (let field1 of fieldModified) { \n            let row = [];\n            let field = field1.before;\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n}}\n\n\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n{{? modifyEntities && modifyEntities.length > 0}}\n/* --------------- 修改表 --------------- */\n{{~ modifyEntities:entity}}\n{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]{{let changeText=baseChanged(entity.data.baseChanged);}}\n{{=baseChanged(entity.data.baseChanged)}}\n    {{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n    修改字段：\n    {{='\\t'}}{{=buildModifiedDesc(entity).join('\\n\\t')}}{{?}}{{\n        /*计算是否调整了属性*/\n        let propAdded = entity.data.propAdded || [];\n        let propRemoved = entity.data.propRemoved || [];\n        let propModified = entity.data.propModified || [];\n        let changed = propAdded.length>0 || propRemoved.length>0 || propModified.length>0;\n        /*计算关联是否调整*/\n        let refEntityAdd = entity.data.refEntityAdd || [];\n        let refEntityRemoved = entity.data.refEntityRemoved || [];\n        let relaArray = [];\n        for (let rela of refEntityAdd) {\n            relaArray.push('建立关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        for (let rela of refEntityRemoved) {\n            relaArray.push('解除关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        /*索引是否修改过*/\n        let indexChanged = entity.data.indexChanged;\n    }}{{=indexChanged?'\\n\\t更改了索引':''}}{{=changed?'\\n\\t更改了属性':''}}{{=relaArray.length>0?('\\n\\t'+relaArray.join('\\n\\t')):''}}\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n    添加字段：\n{{='\\t'}}{{=buildAddedDesc(entity).join('\\n\\t')}}\n{{?}}{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n    删除字段：\n{{='\\t'}}{{=buildRemovedDesc(entity).join('\\n\\t')}}\n{{?}}\n{{~}}\n{{?}}",
        "update": "{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChangedDDL(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push(`EXEC sp_rename '${before.defKey}','${after.defKey}'`);\n        }\n        let commentText = '';\n        let commentChanged = false;\n        if(before.defName !== after.defName){\n            commentText = after.defName;\n            commentChanged = true;\n        }\n        if(before.comment !== after.comment){\n            commentChanged = true;\n            if(commentText){\n                commentText = (commentText+ ';'+after.comment)\n            }else{\n                commentText = after.comment\n            }\n        }\n        if(commentChanged){\n            let myText = `IF ((SELECT COUNT(*) FROM ::fn_listextendedproperty('MS_Description','SCHEMA', 'dbo','TABLE', '${after.defKey}', NULL, NULL)) > 0)\n            \\n\\tEXEC sp_updateextendedproperty 'MS_Description', '${commentText}','SCHEMA', 'dbo','TABLE', '${after.defKey}'\n            \\nELSE\n            \\n\\tEXEC sp_addextendedproperty 'MS_Description', '${commentText}', 'SCHEMA', 'dbo','TABLE', '${after.defKey}'\n            `;\n            ret.push(myText);\n            /*ret.push('ALTER TABLE '+after.defKey+' COMMENT \\''+commentText+'\\'');*/\n        }\n        let baseText = '-- 基本信息:\\n';\n        return baseText+ret.join(';\\n')+';';\n    };\n    \n    function buildAddedDDL(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        if(fieldAdded.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE [dbo].[${entity.data.baseInfo.defKey}]`;\n        for (let field of fieldAdded) { \n            let ddlItem = `ADD [${field.defKey}] ${field.dbType}`;\n            /*处理数据类型长度*/\n            if(field.len>0){\n                ddlItem += ('('+field.len);\n                if(parseInt(field.scale)>0){\n                    ddlItem += (','+field.scale);\n                }\n                ddlItem += ')';\n            }\n            let defaultValue = field.defaultValue;\n            defaultValue = (defaultValue==null)?\"\":(\"\"+defaultValue);\n            if(defaultValue.length>0){\n                ddlItem += (' DEFAULT ' + defaultValue);\n            }\n            if(field.notNull){\n                ddlItem += ' NOT NULL';\n            }\n            ret.push(`${firstDDL} ${ddlItem}`);\n            \n            /*处理字段注释*/\n            let fieldComments = [];\n            if(field.defName != null &&field.defName.length>0){\n                fieldComments.push(field.defName);\n            }\n            if(field.comment != null &&field.comment.length>0){\n                fieldComments.push(field.comment);\n            }\n            let commentText = fieldComments.join(';');\n            if(commentText != null && commentText.length > 0){\n                let commentDDL = `EXEC sp_addextendedproperty 'MS_Description', N'${commentText}','SCHEMA', N'dbo','TABLE', N'${entity.data.baseInfo.defKey}','COLUMN', N'${field.defKey}'`;\n                ret.push(commentDDL);\n            }\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildRemovedDDL(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        if(fieldRemoved.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE [dbo].[${entity.data.baseInfo.defKey}]`;\n        for (let field of fieldRemoved) { \n            ret.push(`${firstDDL} DROP COLUMN [${field.defKey}]`);\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildModifiedDDL(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        let firstDDL = `ALTER TABLE [dbo].[${entity.data.baseInfo.defKey}]`;\n        for (let field of fieldModified) { \n            let changeDDL = '';\n            let before = field.before || {};\n            let after = field.after || {};\n            if(before.defKey === after.defKey){\n                changeDDL += (' ALTER COLUMN ['+after.defKey+']');\n            }else{\n                let renameText = `EXEC sp_rename '[dbo].[${entity.data.baseInfo.defKey}].[${before.defKey}]','${after.defKey}','COLUMN';`;\n                ret.push(renameText);\n                continue;\n            }\n            changeDDL += (' '+after.dbType);\n            if(after.len>0){\n                changeDDL += ('('+after.len);\n                if(parseInt(after.scale)>0){\n                    changeDDL += (','+after.scale);\n                }\n                changeDDL += ')';\n            }\n            let defaultValue = after.defaultValue;\n            defaultValue = (defaultValue==null)?\"\":(\"\"+defaultValue);\n            if(defaultValue.length>0){\n                changeDDL += (' DEFAULT ' + defaultValue);\n            }\n            \n            if(after.notNull){\n                changeDDL += ' NOT NULL';\n            }\n            ret.push(`${firstDDL} ${changeDDL};`);\n        }\n        return ret;\n    };\n}}\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=it.func.createDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=it.func.dropDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? modifyEntities && modifyEntities.length > 0}}\n{{~ modifyEntities:entity}}\n/* --------------- 修改表 --------------- */\n-- 修改表：{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]\n{{=baseChangedDDL(entity.data.baseChanged)}}\n{{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n-- 修改字段：\n{{=buildModifiedDDL(entity).join('\\n')}}\n{{?}}{{\n/*索引是否修改过*/\nlet indexChanged = entity.data.indexChanged;\n}}\n{{? indexChanged }}\n{{=it.func.indexRebuildDDL(entity.data.baseInfo,entity.data.newIndexes,entity.data.fullFields,entity['type'])}}\n{{?}}\n\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n-- 添加字段：\n{{=buildAddedDDL(entity)}};\n{{?}}\n\n{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n-- 删除字段：\n{{=buildRemovedDDL(entity)}};\n{{?}}\n{{~}}\n{{?}}"
      },
      {
        "applyFor": "DFBEC1DD-AA84-456E-BBF3-C95DD0DB2022",
        "type": "dbDDL",
        "createTable": "DROP TABLE IF EXISTS {{=it.entity.defKey}};\nCREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{? field.autoIncrement}}SERIAL{{??}}{{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= field.defaultValue ? it.func.join(' DEFAULT ',field.defaultValue,' ') : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}COMMENT ON TABLE {{=it.entity.defKey}} IS '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}';{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.defName || field.comment}}COMMENT ON COLUMN {{=it.entity.defKey}}.{{=field.defKey}} IS '{{=it.func.join(field.defName,field.comment,';')}}';{{?}}\n{{~}}",
        "createView": "CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n",
        "deleteTable": "DROP TABLE IF EXISTS {{=it.entity.defKey}};",
        "createIndex": "{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}",
        "deleteIndex": "{{~ it.entity.indexes:index}}\nDROP INDEX {{=index.defKey}} ;\n{{~}}",
        "message": "{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChanged(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push('代码:'+(before.defKey||'NULL')+'->'+(after.defKey||'NULL'));\n        }\n        if(before.defName !== after.defName){\n            ret.push('显示名称:'+(before.defName||'NULL')+'->'+(after.defName||'NULL'));\n        }\n        if(before.comment !== after.comment){\n            ret.push('说明:'+(before.comment||'NULL')+'->'+(after.comment||'NULL'));\n        }\n        if(ret.length>0){\n            return '    基本信息:\\n\\t'+ret.join('\\n\\t');\n        }\n        return '';\n    };\n    \n    function buildAddedDesc(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        \n        for (let field of fieldAdded) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildRemovedDesc(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        \n        for (let field of fieldRemoved) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildModifiedDesc(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        for (let field1 of fieldModified) { \n            let row = [];\n            let field = field1.before;\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n}}\n\n\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n{{? modifyEntities && modifyEntities.length > 0}}\n/* --------------- 修改表 --------------- */\n{{~ modifyEntities:entity}}\n{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]{{let changeText=baseChanged(entity.data.baseChanged);}}\n{{=baseChanged(entity.data.baseChanged)}}\n    {{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n    修改字段：\n    {{='\\t'}}{{=buildModifiedDesc(entity).join('\\n\\t')}}{{?}}{{\n        /*计算是否调整了属性*/\n        let propAdded = entity.data.propAdded || [];\n        let propRemoved = entity.data.propRemoved || [];\n        let propModified = entity.data.propModified || [];\n        let changed = propAdded.length>0 || propRemoved.length>0 || propModified.length>0;\n        /*计算关联是否调整*/\n        let refEntityAdd = entity.data.refEntityAdd || [];\n        let refEntityRemoved = entity.data.refEntityRemoved || [];\n        let relaArray = [];\n        for (let rela of refEntityAdd) {\n            relaArray.push('建立关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        for (let rela of refEntityRemoved) {\n            relaArray.push('解除关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        /*索引是否修改过*/\n        let indexChanged = entity.data.indexChanged;\n    }}{{=indexChanged?'\\n\\t更改了索引':''}}{{=changed?'\\n\\t更改了属性':''}}{{=relaArray.length>0?('\\n\\t'+relaArray.join('\\n\\t')):''}}\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n    添加字段：\n{{='\\t'}}{{=buildAddedDesc(entity).join('\\n\\t')}}\n{{?}}{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n    删除字段：\n{{='\\t'}}{{=buildRemovedDesc(entity).join('\\n\\t')}}\n{{?}}\n{{~}}\n{{?}}",
        "update": "{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChangedDDL(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push(`ALTER TABLE ${before.defKey} RENAME TO ${after.defKey}`);\n        }\n        let commentText = '';\n        let commentChanged = false;\n        if(before.defName !== after.defName){\n            commentText = after.defName;\n            commentChanged = true;\n        }\n        if(before.comment !== after.comment){\n            commentChanged = true;\n            if(commentText){\n                commentText = (commentText+ ';'+after.comment)\n            }else{\n                commentText = after.comment\n            }\n        }\n        if(commentChanged){\n            let myText = `COMMENT ON TABLE ${after.defKey} IS '${commentText}'`;\n            ret.push(myText);\n        }\n        let baseText = '-- 基本信息:\\n';\n        return baseText+ret.join(';\\n')+';';\n    };\n    \n    function buildAddedDDL(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        if(fieldAdded.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldAdded) { \n            let ddlItem = `ADD COLUMN ${field.defKey} ${field.dbType}`;\n            /*处理数据类型长度*/\n            if(field.len>0){\n                ddlItem += ('('+field.len);\n                if(parseInt(field.scale)>0){\n                    ddlItem += (','+field.scale);\n                }\n                ddlItem += ')';\n            }\n            if(field.notNull){\n                ddlItem += ' NOT NULL';\n            }            \n            let defaultValue = field.defaultValue;\n            defaultValue = (defaultValue==null)?\"\":(\"\"+defaultValue);\n            if(defaultValue.length>0){\n                ddlItem += (' DEFAULT ' + defaultValue);\n            }\n\n            ret.push(`${firstDDL} ${ddlItem}`);\n            \n            /*处理字段注释*/\n            let fieldComments = [];\n            if(field.defName != null &&field.defName.length>0){\n                fieldComments.push(field.defName);\n            }\n            if(field.comment != null &&field.comment.length>0){\n                fieldComments.push(field.comment);\n            }\n            let commentText = fieldComments.join(';');\n            if(commentText != null && commentText.length > 0){\n                let commentDDL = `COMMENT ON COLUMN ${entity.data.baseInfo.defKey}.${field.defKey} IS '${commentText}'`;\n                 ret.push(commentDDL);\n            }\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildRemovedDDL(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        if(fieldRemoved.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldRemoved) { \n            ret.push(`${firstDDL} DROP COLUMN ${field.defKey}`);\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildModifiedDDL(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldModified) { \n            let before = field.before || {};\n            let after = field.after || {};\n            if(before.defKey !== after.defKey){\n                let renameText = `ALTER TABLE ${entity.data.baseInfo.defKey} RENAME COLUMN ${before.defKey} TO ${after.defKey};`;\n                ret.push(renameText);\n            }\n            /*如果没有变化，则不生成变更语句*/\n            if(before.dbType === after.dbType \n            && before['len'] === after['len'] \n            && before.scale === after.scale\n            && before.primaryKey === after.primaryKey\n            && before.notNull === after.notNull\n            && before.autoIncrement === after.autoIncrement\n            && before.defaultValue === after.defaultValue){\n                continue;\n            }\n            if(before.dbType !== after.dbType || before.len !== after.len || before.scale !== after.scale){\n                let dbTypeDDL = `ALTER TABLE ${entity.data.baseInfo.defKey} ALTER COLUMN ${after.defKey} TYPE ${before.dbType}`;\n                if(after.len>0){\n                    dbTypeDDL += ('('+after.len);\n                    if(parseInt(after.scale)>0){\n                        dbTypeDDL += (','+after.scale);\n                    }\n                    dbTypeDDL += ')';\n                }\n                ret.push(dbTypeDDL+';');\n            }\n            \n            if(before.defaultValue !== after.defaultValue){\n                let defaultDDL = '';\n                let defaultValue = after.defaultValue;\n                defaultValue = (defaultValue==null)?\"NULL\":(\"\"+defaultValue);\n                if(defaultValue.length>0){\n                    defaultDDL += ('SET DEFAULT ' + defaultValue);\n                }\n                let defaultTpl = `ALTER TABLE ${entity.data.baseInfo.defKey} ALTER COLUMN ${defaultDDL};`;\n                ret.push(defaultTpl);\n            }\n            \n            if(before.notNull !== after.notNull){\n                let notNullDDL= 'SET NULL';\n                if(after.notNull){\n                    let notNullDDL= 'SET NOT NULL';\n                }\n                let notNullTpl = `ALTER TABLE ${entity.data.baseInfo.defKey} ALTER COLUMN ${notNullDDL};`;\n                ret.push(notNullTpl);\n            }\n        }\n        return ret;\n    };\n}}\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=it.func.createDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=it.func.dropDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? modifyEntities && modifyEntities.length > 0}}\n{{~ modifyEntities:entity}}\n/* --------------- 修改表 --------------- */\n-- 修改表：{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]\n{{=baseChangedDDL(entity.data.baseChanged)}}\n{{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n-- 修改字段：\n{{=buildModifiedDDL(entity).join('\\n')}}\n{{?}}{{\n/*索引是否修改过*/\nlet indexChanged = entity.data.indexChanged;\n}}\n{{? indexChanged }}\n-- 索引重建\n{{=it.func.indexRebuildDDL(entity.data.baseInfo,entity.data.newIndexes,entity.data.fullFields,entity['type'])}}\n{{?}}\n\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n-- 添加字段：\n{{=buildAddedDDL(entity)}};\n{{?}}\n\n{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n-- 删除字段：\n{{=buildRemovedDDL(entity)}};\n{{?}}\n{{~}}\n{{?}}"
      },
      {
        "type": "dbDDL",
        "applyFor": "89504F5D-94BF-4C9E-8B2E-44F37305FED5",
        "createTable": "CREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= field.autoIncrement ? '' : '' }}{{= field.defaultValue ? it.func.join(' DEFAULT ',field.defaultValue,' ') : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}COMMENT ON TABLE {{=it.entity.defKey}} IS '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}';{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.defName || field.comment}}COMMENT ON COLUMN {{=it.entity.defKey}}.{{=field.defKey}} IS '{{=it.func.join(field.defName,field.comment,';')}}';{{?}}\n{{~}}",
        "createIndex": "{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}",
        "createView": "CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n"
      },
      {
        "type": "dbDDL",
        "applyFor": "0BBCABA5-B8E4-41B0-B8E4-8F5EA6029307",
        "createTable": "CREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= field.autoIncrement ? '' : '' }}{{= field.defaultValue ? it.func.join(' DEFAULT ','('+field.defaultValue+')',' ') : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}COMMENT ON TABLE {{=it.entity.defKey}} IS '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}';{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.defName || field.comment}}COMMENT ON COLUMN {{=it.entity.defKey}}.{{=field.defKey}} IS '{{=it.func.join(field.defName,field.comment,';')}}';{{?}}\n{{~}}",
        "createIndex": "{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}",
        "createView": "CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n"
      },
      {
        "type": "dbDDL",
        "applyFor": "592C7013-143D-4E7B-AF64-0D7BF1E28230",
        "createTable": "DROP TABLE IF EXISTS {{=it.entity.defKey}};\nCREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= field.autoIncrement ? ' AUTO_INCREMENT' : '' }}{{= field.defaultValue ? it.func.join(' DEFAULT ',field.defaultValue,' ') : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}COMMENT ON TABLE {{=it.entity.defKey}} IS '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}';{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.defName || field.comment}}COMMENT ON COLUMN {{=it.entity.defKey}}.{{=field.defKey}} IS '{{=it.func.join(field.defName,field.comment,';')}}';{{?}}\n{{~}}",
        "createIndex": "{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}",
        "createView": "CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n"
      },
      {
        "type": "dbDDL",
        "applyFor": "77BD85E5-9D0D-4096-8427-CBA306FC9C6A",
        "createTable": "DROP TABLE IF EXISTS {{=it.entity.defKey}};\nCREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{= field.defaultValue ? it.func.join(' DEFAULT ',field.defaultValue,' ') : '' }}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}COMMENT ON TABLE {{=it.entity.defKey}} IS '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}';{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.defName || field.comment}}COMMENT ON COLUMN {{=it.entity.defKey}}.{{=field.defKey}} IS '{{=it.func.join(field.defName,field.comment,';')}}';{{?}}\n{{~}}",
        "createIndex": "{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}",
        "createView": "CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n"
      },
      {
        "applyFor": "11D1FB71-A587-4217-89BA-611B8A1F83E0",
        "type": "dbDDL",
        "createTable": "DROP TABLE IF EXISTS {{=it.entity.defKey}};\nCREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}} {{= field.notNull ? 'NOT NULL' : '' }} {{= field.autoIncrement ? 'AUTO_INCREMENT' : '' }} {{= field.defaultValue ? it.func.join('DEFAULT',field.defaultValue,' ') : '' }} COMMENT '{{=it.func.join(field.defName,field.comment,';')}}' {{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n)  COMMENT '{{=it.func.join(it.entity.defName,it.entity.comment,';') }}';\n$blankline\n",
        "createView": "CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n",
        "deleteTable": "",
        "createIndex": "",
        "deleteIndex": "",
        "message": "",
        "update": ""
      },
      {
        "applyFor": "B363BE0B-F852-49B8-9B2E-F6D2174DEAC1",
        "type": "dbDDL",
        "createTable": "DROP TABLE IF EXISTS {{=it.entity.defKey}};\nCREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}} {{= field.notNull ? 'NOT NULL' : '' }} {{= field.autoIncrement ? 'AUTOINCREMENT' : '' }} {{= field.defaultValue ? it.func.join('DEFAULT',field.defaultValue,' ') : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }} --{{=it.func.join(field.defName,field.comment,';')}}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n)  ; --{{=it.func.join(it.entity.defName,it.entity.comment,';') }}\n$blankline\n",
        "createIndex": "{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}",
        "createView": "CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n"
      },
      {
        "type": "dbDDL",
        "applyFor": "dictSQLTemplate",
        "content": "/* 插入字典总表[{{=it.dict.defKey}}-{{=it.dict.defName}}] */\nINSERT INTO SYS_DICT(KEY_,LABEL,INTRO,REVISION) VALUES('{{=it.dict.defKey}}','{{=it.dict.defName}}','{{=it.dict.intro}}',1);\n/* 插入字典明细表 */\n{{~it.dict.items:item:index}}\nINSERT INTO SYS_DICT_ITEM(DICT_KEY,KEY_,LABEL,SORT_,INTRO,REVISION) VALUES('{{=it.dict.defKey}}','{{=item.defKey}}','{{=item.defName}}','{{=item.sort}}','{{=item.intro}}',1);\n{{~}}"
      },
      {
        "applyFor": "81CCA482-3F4D-4EAC-8CF9-F5E7BC098AD2",
        "type": "dbDDL",
        "createTable": "/**字段名,关键字等全部用的小写*/\ndrop table if exists {{=it.entity.defKey}};\n/**补充上库名,external关键字根据建表规范看是否添加*/\ncreate [external] table if not exists {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n/**这里把varchar,char,text,date,datetime字段全部映射为string类型.tinyint unsigned,bit,Integer,tinyint,smallint,mediumint映射为int类型,int unsigned映射为bigint.其它自定义映射规则根据自己情况修改*/\n/**当长度>0只有为decimal类型或double类型时才保留长度和小数的位数*/\n{{~it.entity.fields:field:index}}\n    {{=it.func.lowerCase(field.defKey)}} {{=it.func.lowerCase(field.dbType)=='varchar'||it.func.lowerCase(field.dbType)=='char'||it.func.lowerCase(field.dbType)=='text'||it.func.lowerCase(field.dbType)=='date'||it.func.lowerCase(field.dbType)=='datetime' ? 'string':it.func.lowerCase(field.dbType)=='tinyint unsigned'||it.func.lowerCase(field.dbType)=='bit'||it.func.lowerCase(field.dbType)=='integer'||it.func.lowerCase(field.dbType)=='tinyint'||it.func.lowerCase(field.dbType)=='smallint'||it.func.lowerCase(field.dbType)=='mediumint' ? 'int':it.func.lowerCase(field.dbType)=='int unsigned' ? 'bigint':it.func.lowerCase(field.dbType)}}{{?field.len>0&&(it.func.lowerCase(field.dbType)=='decimal'||it.func.lowerCase(field.dbType)=='double')}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{=')'}}{{?}}{{?}} comment '{{=it.func.join(field.defName,field.comment,'')}}' {{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n{{?}}\n)\n{{\n    let partitionedBy = it.entity.properties['partitioned by'];\n    partitionedBy = partitionedBy?partitionedBy:'请在扩展属性中配置[partitioned by]属性';\n}}\ncomment '{{=it.func.join(it.entity.defName,';') }}'\n/**是否分区表,分区字段名和字段注释自定义*/\n[partitioned by {{=partitionedBy}}]\n/**文件存储格式自定义*/\n[stored as orc]\n/**hdfs上的地址自定义*/\n[location xxx]\n;",
        "createView": "",
        "deleteTable": "",
        "createIndex": "",
        "deleteIndex": "",
        "message": "",
        "update": ""
      },
      {
        "applyFor": "B91D99E0-9B7C-416C-8737-B760957DAF09",
        "type": "appCode",
        "content": "{{\n    var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1<10?\"0\"+today.getMonth():today.getMonth();\n    var days=today.getDate()<10?\"0\"+today.getDate():today.getDate();\n    var hours = today.getHours()<10?\"0\"+today.getHours():today.getHours();         \n\tvar minutes = today.getMinutes()<10?\"0\"+today.getMinutes():today.getMinutes();      \n\tvar seconds = today.getSeconds()<10?\"0\"+today.getSeconds():today.getSeconds();    \n}}\n// Package models  {{=it.func.join(it.entity.defName,it.entity.comment,'，')}}\n// author : http://www.liyang.love\n// date : {{=fullYear}}-{{=month}}-{{=days}} {{=hours}}:{{=minutes}}\n// desc : {{=it.func.join(it.entity.defName,it.entity.comment,'，')}}\npackage models\n\n$blankline\n\n// {{=it.func.camel(it.entity.defKey,true) }}  {{=it.func.join(it.entity.defName,it.entity.comment,'，')}}。\n// 说明:{{=it.entity.comment}}\n// 表名:{{=it.entity.defKey}}\n// group: {{=it.func.camel(it.entity.defKey,true) }}\n// obsolete:\n// appliesto:go 1.8+;\n// namespace:hongmouer.his.models.{{=it.func.camel(it.entity.defKey,true) }}\n// assembly: hongmouer.his.models.go\n// class:HongMouer.HIS.Models.{{=it.func.camel(it.entity.defKey,true) }}\n// version:{{=fullYear}}-{{=month}}-{{=days}} {{=hours}}:{{=minutes}}\ntype {{=it.func.camel(it.entity.defKey,true) }} struct {\n    {{~it.entity.fields:field:index}}\n    {{=formatGoLang(it.func.camel(field.defKey,true),null,field,it.entity.fields,null,1)}} {{=formatGoLang(field.type,\"type\",field,it.entity.fields,10,3)}}  `gorm:\"column:{{=field.primaryKey?\"primaryKey;\":\"\"}}{{=field.defKey}}\" json:\"{{=it.func.camel(field.defKey,true)}}\"` {{=formatGoLang(\"gorm:column:\"+field.defKey+\" json:\"+it.func.camel(field.defKey,true),null,field,it.entity.fields,null,2)}}  //type:{{=formatGoLang(field.type,\"type\",field,it.entity.fields,null,3)}}  comment:{{=formatGoLang(it.func.join(field.defName,field.comment,';'),\"defName\",field,it.entity.fields,null,4)}}  version:{{=fullYear}}-{{=month}}-{{=days}} {{=hours}}:{{=minutes}}\n    {{~}}\n}\n\n\n$blankline\n// TableName 表名:{{=it.entity.defKey}}，{{=it.entity.defName}}。\n// 说明:{{=it.entity.comment}}\nfunc (ZentaoUserInfo) TableName() string {\n\treturn \"{{=it.entity.defKey}}\"\n}\n\n{{\n\nfunction formatGoLang(str, fieldName, field, fileds, emptLength, isFiled) {\n    var maxLength = 0;\n\n    if (isFiled == 1) {\n        for (var i = 0; i < fileds.length; i++) {\n            if (getBlength(it.func.camel(fileds[i].defKey, true)) > maxLength) {\n                maxLength = getBlength(it.func.camel(fileds[i].defKey, true)) + 2;\n            }\n        }\n    } else if (isFiled == 2) {\n        for (var i = 0; i < fileds.length; i++) {\n            var newStr = \"gorm:column:\" + fileds[i].defKey + \" json:\" + it.func.camel(fileds[i].defKey, true);\n            if (getBlength(newStr) > maxLength) {\n                maxLength = getBlength(newStr) + 2;\n            }\n        }\n        var empt = \"\";\n        var strLength = getBlength(str);\n        if (field.primaryKey) {\n            strLength += getBlength(\"primaryKey;\");\n        }\n        for (var j = 0; j < maxLength - strLength; j++) {\n            empt += ' ';\n        }\n        return empt;\n    } else if (isFiled == 3) {\n        /*获取某个字段的最大长度*/\n        for (var i = 0; i < fileds.length; i++) {\n            var newStr = eval(\"fileds[\" + i + \"].\" + fieldName);\n            if (getBlength(newStr) > maxLength) {\n                maxLength = getBlength(newStr) + 1;\n            }\n        }\n    } else if (isFiled == 4) {\n        /*获取某个字段的最大长度*/\n        for (var i = 0; i < fileds.length; i++) {\n            var newStr = fileds[i].comment + \";\" + fileds[i].defName;\n            if (getBlength(newStr) > maxLength) {\n                maxLength = getBlength(newStr) + 1;\n            }\n        }\n    }\n    else {\n        maxLength = emptLength;\n    }\n\n    var strLength = getBlength(str);\n    for (var j = 0; j < maxLength - strLength; j++) {\n        str += ' ';\n    }\n    return str;\n}\n\nfunction getBlength(str) {\n    var n = 0;\n    for (var i = str.length; i--;) {\n        n += str.charCodeAt(i) > 255 ? 2 : 1;\n    }\n    return n;\n} \n\n}}"
      }
    ],
    "generatorDoc": {
      "docTemplate": ""
    },
    "relationFieldSize": "15",
    "uiHint": [
      {
        "defKey": "Input",
        "defName": "普通输入框",
        "id": "642D2E0A-8846-4549-BE56-8C0473F26EDE"
      },
      {
        "defKey": "Select",
        "defName": "下拉输入框",
        "id": "FB111359-2B73-4443-926C-08A98E446448"
      },
      {
        "defKey": "CheckBox",
        "defName": "复选框",
        "id": "0CB8A6C9-1115-4FC0-B51E-5C028065082F"
      },
      {
        "defKey": "RadioBox",
        "defName": "单选框",
        "id": "5C04987A-260F-4B7C-A5D5-22A181AAE9CA"
      },
      {
        "defKey": "Double",
        "defName": "小数输入",
        "id": "8D5BAFE4-E15C-4707-A047-8EE59C58E70F"
      },
      {
        "defKey": "Integer",
        "defName": "整数输入",
        "id": "9999AF2A-A44E-415C-A2DC-D7C613BD0073"
      },
      {
        "defKey": "Money",
        "defName": "金额输入",
        "id": "2B0C3D0C-7BAF-4B36-81AD-9362B5E5DC2E"
      },
      {
        "defKey": "Date",
        "defName": "日期输入",
        "id": "E4D94E14-F695-487F-AFC2-4D888009B7DA"
      },
      {
        "defKey": "DataYearMonth",
        "defName": "年月输入",
        "id": "936927E3-DD2D-4096-87FD-074CDE278D59"
      },
      {
        "defKey": "Text",
        "defName": "长文本输入",
        "id": "D89DD4F1-ADAC-4469-BF8D-B3FF41AE7963"
      },
      {
        "defKey": "RichText",
        "defName": "富文本输入",
        "id": "C134EB1F-4CFF-49E0-882F-2C6FB275CB20"
      }
    ],
    "headers": [
      {
        "refKey": "defKey",
        "hideInGraph": false
      },
      {
        "refKey": "defName",
        "hideInGraph": false
      },
      {
        "refKey": "primaryKey",
        "hideInGraph": false
      },
      {
        "refKey": "notNull",
        "hideInGraph": true
      },
      {
        "refKey": "autoIncrement",
        "hideInGraph": true
      },
      {
        "refKey": "domain",
        "hideInGraph": true
      },
      {
        "refKey": "type",
        "hideInGraph": false
      },
      {
        "refKey": "len",
        "hideInGraph": false
      },
      {
        "refKey": "scale",
        "hideInGraph": false
      },
      {
        "refKey": "comment",
        "hideInGraph": true
      },
      {
        "refKey": "refDict",
        "hideInGraph": true
      },
      {
        "refKey": "defaultValue",
        "hideInGraph": true
      },
      {
        "refKey": "isStandard",
        "hideInGraph": false
      },
      {
        "refKey": "uiHint",
        "hideInGraph": true
      },
      {
        "refKey": "extProps",
        "hideInGraph": true
      }
    ]
  },
  "entities": [
    {
      "id": "D5DB7AF3-3517-43CF-9780-874B9ABE769B",
      "defKey": "pms_attr",
      "defName": "商品属性",
      "comment": "",
      "properties": {},
      "fields": [
        {
          "defKey": "attr_id",
          "defName": "属性id",
          "comment": "",
          "domain": "",
          "type": "BIGINT",
          "len": 20,
          "scale": "",
          "primaryKey": true,
          "notNull": true,
          "autoIncrement": true,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "0DA07FFE-3314-478C-9D91-30006BAA820D",
          "extProps": {}
        },
        {
          "defKey": "name",
          "defName": "属性名",
          "comment": "",
          "domain": "",
          "type": "CHAR",
          "len": 30,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "2C73881A-A13B-48D1-BB2D-902DDCF0BC0E",
          "extProps": {}
        },
        {
          "defKey": "icon",
          "defName": "属性图标",
          "comment": "",
          "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
          "type": "VARCHAR",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "AD9CC8D5-876E-4C9F-AD7C-1E9249ECE5A1",
          "extProps": {}
        },
        {
          "defKey": "value_select",
          "defName": "可选值列表[用逗号分隔]",
          "comment": "",
          "domain": "",
          "type": "CHAR",
          "len": 255,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "BBDA7F93-AF47-4B82-9355-F13124A0237A",
          "extProps": {}
        },
        {
          "defKey": "value_type",
          "defName": "值类型[0-单值",
          "comment": "1-多值]",
          "domain": "",
          "type": "TINYINT",
          "len": 4,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "4F92C18A-8F61-48F8-9A72-41D7300C9032",
          "extProps": {}
        },
        {
          "defKey": "search_type",
          "defName": "是否需要检索[0-不需要",
          "comment": "1-需要]",
          "domain": "",
          "type": "TINYINT",
          "len": 4,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "7AB6084D-6CEF-40FE-905A-EDDDFE51D836",
          "extProps": {}
        },
        {
          "defKey": "type",
          "defName": "属性类型[0-销售属性",
          "comment": "1-基本属性，2-既是销售属性又是基本属性]",
          "domain": "",
          "type": "TINYINT",
          "len": 4,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "30748CE1-D6C7-450D-B088-8CA1B3049223",
          "extProps": {}
        },
        {
          "defKey": "status",
          "defName": "启用状态[0",
          "comment": "- 禁用，1 - 启用]",
          "domain": "",
          "type": "BIGINT",
          "len": 20,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "486F7EEC-1BB9-41CA-A0AA-943EADE2DE2A",
          "extProps": {}
        },
        {
          "defKey": "category_id",
          "defName": "所属分类",
          "comment": "",
          "domain": "",
          "type": "BIGINT",
          "len": 20,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "E65394A2-B67B-42BB-A6B2-957AEB0FEA4C",
          "extProps": {}
        },
        {
          "defKey": "category_path",
          "defName": "祖级列表",
          "comment": "",
          "domain": "",
          "type": "VARCHAR",
          "len": 50,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "0D94E6BF-0057-4A90-BDB7-D53C6A0A4FF7",
          "extProps": {}
        },
        {
          "defKey": "quick_show",
          "defName": "快速展示【是否展示在介绍上；0-否",
          "comment": "1-是】，在sku中仍然可以调整",
          "domain": "",
          "type": "TINYINT",
          "len": 4,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "FFBC283E-03B1-43F7-9C45-0F73630D45E6",
          "extProps": {}
        },
        {
          "defKey": "create_by",
          "defName": "创建者",
          "comment": "",
          "domain": "",
          "type": "VARCHAR",
          "len": 64,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "A4C4BA14-2AC2-464D-9C00-5DADD7E4C765",
          "extProps": {}
        },
        {
          "defKey": "update_by",
          "defName": "更新者",
          "comment": "",
          "domain": "",
          "type": "VARCHAR",
          "len": 64,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "F38E9D4D-883D-4B96-8525-09AD3B7D5CA5",
          "extProps": {}
        },
        {
          "defKey": "create_time",
          "defName": "创建时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "type": "DATETIME",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "refDict": "",
          "id": "9DE0D301-76C2-4E54-9933-57CC1104F45C",
          "extProps": {}
        },
        {
          "defKey": "update_time",
          "defName": "更新时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "type": "DATETIME",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "refDict": "",
          "id": "55A9893F-BB20-4B4B-9EFD-E81A8A7824CE",
          "extProps": {}
        }
      ],
      "indexes": [],
      "nameTemplate": "{defKey}[{defName}]",
      "headers": [
        {
          "freeze": false,
          "refKey": "hideInGraph",
          "hideInGraph": true
        },
        {
          "freeze": true,
          "refKey": "defKey",
          "hideInGraph": false
        },
        {
          "freeze": true,
          "refKey": "defName",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "primaryKey",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "notNull",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "autoIncrement",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "domain",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "type",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "len",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "scale",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "comment",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "refDict",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "defaultValue",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "isStandard",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "uiHint",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "extProps",
          "hideInGraph": true
        }
      ],
      "correlations": []
    },
    {
      "id": "05F300AC-50F7-4D38-AC2F-AFCEA38831F9",
      "defKey": "pms_attr_attr_group",
      "defName": "属性&属性分组关联",
      "comment": "",
      "properties": {},
      "fields": [
        {
          "defKey": "id",
          "defName": "id",
          "comment": "",
          "domain": "",
          "type": "BIGINT",
          "len": 20,
          "scale": "",
          "primaryKey": true,
          "notNull": true,
          "autoIncrement": true,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "51ED34EE-0935-4A81-B143-4036E03ED81E",
          "extProps": {}
        },
        {
          "defKey": "attr_id",
          "defName": "属性id",
          "comment": "",
          "domain": "",
          "type": "BIGINT",
          "len": 20,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "D01EF818-5DD6-48B0-98FF-AF9C15013DA4",
          "extProps": {}
        },
        {
          "defKey": "attr_group_id",
          "defName": "属性分组id",
          "comment": "",
          "domain": "",
          "type": "BIGINT",
          "len": 20,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "DBF036E3-3D4A-4C5E-9B85-7C0A39861A71",
          "extProps": {}
        },
        {
          "defKey": "create_by",
          "defName": "创建者",
          "comment": "",
          "domain": "",
          "type": "VARCHAR",
          "len": 64,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "1ABF91DE-985A-4255-A9A3-217D178F6F22",
          "extProps": {}
        },
        {
          "defKey": "update_by",
          "defName": "更新者",
          "comment": "",
          "domain": "",
          "type": "VARCHAR",
          "len": 64,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "088D1CF4-D50A-4E2E-8C1B-E9403DE602B7",
          "extProps": {}
        },
        {
          "defKey": "create_time",
          "defName": "创建时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "type": "DATETIME",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "3CF8ED9D-D5F7-494A-975D-2C0FAF0C016B",
          "extProps": {}
        },
        {
          "defKey": "update_time",
          "defName": "更新时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "type": "DATETIME",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "E25B1502-BF26-42CE-A558-65230311D6FD",
          "extProps": {}
        }
      ],
      "indexes": [],
      "nameTemplate": "{defKey}[{defName}]",
      "headers": [
        {
          "freeze": false,
          "refKey": "hideInGraph",
          "hideInGraph": true
        },
        {
          "freeze": true,
          "refKey": "defKey",
          "hideInGraph": false
        },
        {
          "freeze": true,
          "refKey": "defName",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "primaryKey",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "notNull",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "autoIncrement",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "domain",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "type",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "len",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "scale",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "comment",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "refDict",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "defaultValue",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "isStandard",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "uiHint",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "extProps",
          "hideInGraph": true
        }
      ],
      "correlations": []
    },
    {
      "id": "B857478D-63AA-4425-8D61-141C18E84922",
      "defKey": "pms_attr_group",
      "defName": "属性分组",
      "comment": "",
      "properties": {},
      "fields": [
        {
          "defKey": "attr_group_id",
          "defName": "分组id",
          "comment": "",
          "domain": "",
          "type": "BIGINT",
          "len": 20,
          "scale": "",
          "primaryKey": true,
          "notNull": true,
          "autoIncrement": true,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "D552196D-3BB7-48AF-96DC-D5C4DFE9E23D",
          "extProps": {}
        },
        {
          "defKey": "name",
          "defName": "组名",
          "comment": "",
          "domain": "",
          "type": "CHAR",
          "len": 20,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "B5B7DC79-9083-4EEB-9822-EC52533A8AF7",
          "extProps": {}
        },
        {
          "defKey": "sort",
          "defName": "排序",
          "comment": "",
          "domain": "",
          "type": "INT",
          "len": 11,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "28A30258-665B-422A-B970-C6EB9A8243F6",
          "extProps": {}
        },
        {
          "defKey": "description",
          "defName": "描述",
          "comment": "",
          "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
          "type": "VARCHAR",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "25401B73-87EB-4AC6-B6BF-A906EA53EA9E",
          "extProps": {}
        },
        {
          "defKey": "icon",
          "defName": "组图标",
          "comment": "",
          "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
          "type": "VARCHAR",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "4B0B0885-2DF6-4DB2-9925-624C6FA4B693",
          "extProps": {}
        },
        {
          "defKey": "category_id",
          "defName": "所属分类id",
          "comment": "",
          "domain": "",
          "type": "BIGINT",
          "len": 20,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "65CF00AD-2CAE-450E-835D-2D6B4BCE0942",
          "extProps": {}
        },
        {
          "defKey": "category_path",
          "defName": "祖级列表",
          "comment": "",
          "domain": "",
          "type": "VARCHAR",
          "len": 50,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "95C9360D-F2D5-4118-A8C7-34639E9A2E3D",
          "extProps": {}
        },
        {
          "defKey": "create_by",
          "defName": "创建者",
          "comment": "",
          "domain": "",
          "type": "VARCHAR",
          "len": 64,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "CB5E8850-F73A-43FA-A683-F67FBF2BCA20",
          "extProps": {}
        },
        {
          "defKey": "update_by",
          "defName": "更新者",
          "comment": "",
          "domain": "",
          "type": "VARCHAR",
          "len": 64,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "A8D94B07-C0BD-4347-AECD-263844BABB28",
          "extProps": {}
        },
        {
          "defKey": "create_time",
          "defName": "创建时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "type": "DATETIME",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "B7340438-DA8A-4661-BCC8-09F78450D1BB",
          "extProps": {}
        },
        {
          "defKey": "update_time",
          "defName": "更新时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "type": "DATETIME",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "0058580F-26E0-45B8-A2B1-41F3477B6F2F",
          "extProps": {}
        }
      ],
      "indexes": [],
      "nameTemplate": "{defKey}[{defName}]",
      "headers": [
        {
          "freeze": false,
          "refKey": "hideInGraph",
          "hideInGraph": true
        },
        {
          "freeze": true,
          "refKey": "defKey",
          "hideInGraph": false
        },
        {
          "freeze": true,
          "refKey": "defName",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "primaryKey",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "notNull",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "autoIncrement",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "domain",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "type",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "len",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "scale",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "comment",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "refDict",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "defaultValue",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "isStandard",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "uiHint",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "extProps",
          "hideInGraph": true
        }
      ],
      "correlations": []
    },
    {
      "id": "AB245CD0-BF57-4798-8096-14F1804CC844",
      "defKey": "pms_brand",
      "defName": "品牌",
      "comment": "",
      "properties": {},
      "fields": [
        {
          "defKey": "brand_id",
          "defName": "品牌id",
          "comment": "",
          "domain": "",
          "type": "BIGINT",
          "len": 20,
          "scale": "",
          "primaryKey": true,
          "notNull": true,
          "autoIncrement": true,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "5A48F522-4CA1-4E0D-A1C7-D2D404B2EA36",
          "extProps": {}
        },
        {
          "defKey": "name",
          "defName": "品牌名",
          "comment": "",
          "domain": "",
          "type": "CHAR",
          "len": 50,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "FC19701E-4D1B-4F52-825E-4EC7F9E6EBCC",
          "extProps": {}
        },
        {
          "defKey": "logo",
          "defName": "品牌logo地址",
          "comment": "",
          "domain": "",
          "type": "VARCHAR",
          "len": 2000,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "6F6AC6A3-73C9-4150-9A54-83896BBBCA83",
          "extProps": {}
        },
        {
          "defKey": "description",
          "defName": "介绍",
          "comment": "",
          "domain": "",
          "type": "LONGTEXT",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "73A24EDF-3C97-4E39-BD5B-DE5CAAC16925",
          "extProps": {}
        },
        {
          "defKey": "status",
          "defName": "显示状态[0-不显示；1-显示]",
          "comment": "",
          "domain": "",
          "type": "TINYINT",
          "len": 4,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "73210AC3-830E-41C3-8071-CDE69B548B03",
          "extProps": {}
        },
        {
          "defKey": "first_letter",
          "defName": "检索首字母",
          "comment": "",
          "domain": "",
          "type": "CHAR",
          "len": 1,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "46064915-FBD8-4062-8916-E65708A8AA91",
          "extProps": {}
        },
        {
          "defKey": "sort",
          "defName": "排序",
          "comment": "",
          "domain": "",
          "type": "INT",
          "len": 11,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "BF8ADB66-B9D0-4FC2-990B-03D234BCB686",
          "extProps": {}
        },
        {
          "defKey": "create_by",
          "defName": "创建者",
          "comment": "",
          "domain": "",
          "type": "VARCHAR",
          "len": 64,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "4D5D2DC3-3250-4FA9-9D27-00E7E46BC582",
          "extProps": {}
        },
        {
          "defKey": "create_time",
          "defName": "创建时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "type": "DATETIME",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "07EF8E10-B12B-436E-9B51-38883BFDF1F1",
          "extProps": {}
        },
        {
          "defKey": "update_by",
          "defName": "更新者",
          "comment": "",
          "domain": "",
          "type": "VARCHAR",
          "len": 64,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "00178D5B-150B-4290-9332-3D8DB837B177",
          "extProps": {}
        },
        {
          "defKey": "update_time",
          "defName": "更新时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "type": "DATETIME",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "8265B2E4-EE60-4AA7-A561-264DB67384F1",
          "extProps": {}
        }
      ],
      "indexes": [],
      "nameTemplate": "{defKey}[{defName}]",
      "headers": [
        {
          "freeze": false,
          "refKey": "hideInGraph",
          "hideInGraph": true
        },
        {
          "freeze": true,
          "refKey": "defKey",
          "hideInGraph": false
        },
        {
          "freeze": true,
          "refKey": "defName",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "primaryKey",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "notNull",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "autoIncrement",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "domain",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "type",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "len",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "scale",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "comment",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "refDict",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "defaultValue",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "isStandard",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "uiHint",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "extProps",
          "hideInGraph": true
        }
      ],
      "correlations": []
    },
    {
      "id": "03D01904-2A98-47DC-B07F-4F327DF267E2",
      "defKey": "pms_cart_item",
      "defName": "购物车",
      "comment": "",
      "properties": {},
      "fields": [
        {
          "defKey": "cart_item_id",
          "defName": "主键",
          "comment": "",
          "domain": "",
          "type": "BIGINT UNSIGNED",
          "len": 21,
          "scale": "",
          "primaryKey": true,
          "notNull": true,
          "autoIncrement": true,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "2A3FD675-0126-40E3-A95D-5FE2252C67E1",
          "extProps": {}
        },
        {
          "defKey": "shop_id",
          "defName": "店铺ID",
          "comment": "",
          "domain": "",
          "type": "BIGINT",
          "len": 20,
          "scale": "",
          "primaryKey": false,
          "notNull": true,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "323EC778-F109-45FB-AA8E-A1BDBE718A9D",
          "extProps": {}
        },
        {
          "defKey": "spu_id",
          "defName": "产品ID",
          "comment": "",
          "domain": "",
          "type": "BIGINT UNSIGNED",
          "len": 21,
          "scale": "",
          "primaryKey": false,
          "notNull": true,
          "autoIncrement": false,
          "defaultValue": "0",
          "hideInGraph": false,
          "refDict": "",
          "id": "2CF81A02-F770-45B5-9DDD-C10A799B29C0",
          "extProps": {}
        },
        {
          "defKey": "sku_id",
          "defName": "SkuID",
          "comment": "",
          "domain": "",
          "type": "BIGINT UNSIGNED",
          "len": 21,
          "scale": "",
          "primaryKey": false,
          "notNull": true,
          "autoIncrement": false,
          "defaultValue": "0",
          "hideInGraph": false,
          "refDict": "",
          "id": "A521FBFE-6616-4A3A-878C-DE7EE77DFDE0",
          "extProps": {}
        },
        {
          "defKey": "user_id",
          "defName": "用户ID",
          "comment": "",
          "domain": "",
          "type": "BIGINT UNSIGNED",
          "len": 21,
          "scale": "",
          "primaryKey": false,
          "notNull": true,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "8C4C2DA0-D1D8-47DA-B692-551FCBDB3222",
          "extProps": {}
        },
        {
          "defKey": "count",
          "defName": "购物车产品个数",
          "comment": "",
          "domain": "",
          "type": "INT",
          "len": 11,
          "scale": "",
          "primaryKey": false,
          "notNull": true,
          "autoIncrement": false,
          "defaultValue": "0",
          "hideInGraph": false,
          "refDict": "",
          "id": "728C7574-BAA3-44EF-A9B1-10410379131D",
          "extProps": {}
        },
        {
          "defKey": "price_fee",
          "defName": "售价",
          "comment": "加入购物车时的商品价格",
          "domain": "",
          "type": "BIGINT UNSIGNED",
          "len": 21,
          "scale": "",
          "primaryKey": false,
          "notNull": true,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "41916A04-E2DE-4013-BEE6-B51E53EF9979",
          "extProps": {}
        },
        {
          "defKey": "checked",
          "defName": "是否已勾选",
          "comment": "",
          "domain": "",
          "type": "TINYINT",
          "len": 4,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "DBABF199-838F-4C79-A5BA-4B5BAABF5863",
          "extProps": {}
        },
        {
          "defKey": "create_by",
          "defName": "创建者",
          "comment": "",
          "domain": "",
          "type": "VARCHAR",
          "len": 64,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "4460C171-F6EB-483B-8F1F-30A18ED563CC",
          "extProps": {}
        },
        {
          "defKey": "update_by",
          "defName": "更新者",
          "comment": "",
          "domain": "",
          "type": "VARCHAR",
          "len": 64,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "C11A9CE2-DCD2-45B0-989F-75D248D89587",
          "extProps": {}
        },
        {
          "defKey": "create_time",
          "defName": "创建时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "type": "DATETIME",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "341B5D4A-D957-4E82-8B28-6C26F2AE70C2",
          "extProps": {}
        },
        {
          "defKey": "update_time",
          "defName": "更新时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "type": "DATETIME",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "6A669353-0DC1-4F77-AA9B-86ACDB12D83D",
          "extProps": {}
        }
      ],
      "indexes": [
        {
          "defKey": "uk_user_shop_sku",
          "unique": true,
          "defName": null,
          "comment": "",
          "fields": [
            {
              "ascOrDesc": "A",
              "id": "B291A1CF-A5A1-4457-8BC7-10FB8344A460",
              "fieldDefKey": "A521FBFE-6616-4A3A-878C-DE7EE77DFDE0"
            },
            {
              "ascOrDesc": "A",
              "id": "673BF253-387B-4CA8-B41E-ECE9F034B680",
              "fieldDefKey": "8C4C2DA0-D1D8-47DA-B692-551FCBDB3222"
            },
            {
              "ascOrDesc": "A",
              "id": "D772B636-8FB6-4F9D-A9B7-D266AA380D6B",
              "fieldDefKey": "323EC778-F109-45FB-AA8E-A1BDBE718A9D"
            }
          ],
          "id": "9266F604-F9BD-407A-ABED-EF696859DF54"
        },
        {
          "defKey": "idx_shop_id",
          "unique": false,
          "defName": null,
          "comment": "",
          "fields": [
            {
              "ascOrDesc": "A",
              "id": "42E8C25C-D6EA-4CA9-835F-615D4C6E1704",
              "fieldDefKey": "323EC778-F109-45FB-AA8E-A1BDBE718A9D"
            }
          ],
          "id": "3FE19D1D-AB5F-40F9-8628-C86C2F323EA0"
        },
        {
          "defKey": "idx_user_id",
          "unique": false,
          "defName": null,
          "comment": "",
          "fields": [
            {
              "ascOrDesc": "A",
              "id": "AB3CD4A4-D7FA-49B9-B78B-466472C72DE5",
              "fieldDefKey": "8C4C2DA0-D1D8-47DA-B692-551FCBDB3222"
            }
          ],
          "id": "B306DC17-B364-4A73-89E1-235EAD7E884B"
        }
      ],
      "nameTemplate": "{defKey}[{defName}]",
      "headers": [
        {
          "freeze": false,
          "refKey": "hideInGraph",
          "hideInGraph": true
        },
        {
          "freeze": true,
          "refKey": "defKey",
          "hideInGraph": false
        },
        {
          "freeze": true,
          "refKey": "defName",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "primaryKey",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "notNull",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "autoIncrement",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "domain",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "type",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "len",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "scale",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "comment",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "refDict",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "defaultValue",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "isStandard",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "uiHint",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "extProps",
          "hideInGraph": true
        }
      ],
      "correlations": []
    },
    {
      "id": "E8DE4F90-F704-473B-9D72-9D0006DC6CD1",
      "defKey": "pms_category",
      "defName": "商品三级分类",
      "comment": "",
      "properties": {},
      "fields": [
        {
          "defKey": "category_id",
          "defName": "分类id",
          "comment": "",
          "domain": "",
          "type": "BIGINT",
          "len": 20,
          "scale": "",
          "primaryKey": true,
          "notNull": true,
          "autoIncrement": true,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "31E46D1C-AF93-4E42-98F2-B7EF596B28B0",
          "extProps": {}
        },
        {
          "defKey": "name",
          "defName": "分类名称",
          "comment": "",
          "domain": "",
          "type": "CHAR",
          "len": 50,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "8CB5D647-1BE6-4F11-A6A9-90BC5137DE76",
          "extProps": {}
        },
        {
          "defKey": "parent_id",
          "defName": "父分类id",
          "comment": "",
          "domain": "",
          "type": "BIGINT",
          "len": 20,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "14928354-1269-4A32-ABAC-C02A2A8E25E6",
          "extProps": {}
        },
        {
          "defKey": "ancestors",
          "defName": "祖级列表",
          "comment": "",
          "domain": "",
          "type": "VARCHAR",
          "len": 50,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "C7C74A97-A60F-49FA-8B4C-4846405786A8",
          "extProps": {}
        },
        {
          "defKey": "level",
          "defName": "层级",
          "comment": "",
          "domain": "",
          "type": "INT",
          "len": 11,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "716812AD-6E6F-436A-AD18-9A95F3C6D285",
          "extProps": {}
        },
        {
          "defKey": "status",
          "defName": "是否显示[0-不显示",
          "comment": "1显示]",
          "domain": "",
          "type": "CHAR",
          "len": 1,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "70B8CC17-A20E-42B0-AABD-94A1593C3CCF",
          "extProps": {}
        },
        {
          "defKey": "sort",
          "defName": "排序",
          "comment": "",
          "domain": "",
          "type": "INT",
          "len": 11,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "2E85F9F6-83E6-4979-83A1-BF853BD63385",
          "extProps": {}
        },
        {
          "defKey": "unit",
          "defName": "计量单位",
          "comment": "",
          "domain": "",
          "type": "CHAR",
          "len": 50,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "3B6B2D0E-A2E8-45E8-B74B-34CEFD33C989",
          "extProps": {}
        },
        {
          "defKey": "count",
          "defName": "商品数量",
          "comment": "",
          "domain": "",
          "type": "INT",
          "len": 11,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "FFE3C20C-6226-4CEB-BECC-85FDCB27042C",
          "extProps": {}
        },
        {
          "defKey": "create_by",
          "defName": "创建者",
          "comment": "",
          "domain": "",
          "type": "VARCHAR",
          "len": 64,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "9064AB10-08B4-48CB-9A55-81E235590596",
          "extProps": {}
        },
        {
          "defKey": "create_time",
          "defName": "创建时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "type": "DATETIME",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "00074458-901E-4D4F-9D87-77183F5C7886",
          "extProps": {}
        },
        {
          "defKey": "update_by",
          "defName": "更新者",
          "comment": "",
          "domain": "",
          "type": "VARCHAR",
          "len": 64,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "ADB04859-FC53-4AC2-98B9-CDC5B8645EB3",
          "extProps": {}
        },
        {
          "defKey": "update_time",
          "defName": "更新时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "type": "DATETIME",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "792C8FE6-A28E-49D8-9224-D97E0980AEC7",
          "extProps": {}
        }
      ],
      "indexes": [],
      "nameTemplate": "{defKey}[{defName}]",
      "headers": [
        {
          "freeze": false,
          "refKey": "hideInGraph",
          "hideInGraph": true
        },
        {
          "freeze": true,
          "refKey": "defKey",
          "hideInGraph": false
        },
        {
          "freeze": true,
          "refKey": "defName",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "primaryKey",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "notNull",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "autoIncrement",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "domain",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "type",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "len",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "scale",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "comment",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "refDict",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "defaultValue",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "isStandard",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "uiHint",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "extProps",
          "hideInGraph": true
        }
      ],
      "correlations": []
    },
    {
      "id": "F6D44FC2-DA23-41C2-8447-771E78D13D8B",
      "defKey": "pms_category_brand",
      "defName": "分类&品牌关联",
      "comment": "",
      "properties": {},
      "fields": [
        {
          "defKey": "id",
          "defName": "",
          "comment": null,
          "domain": "",
          "type": "BIGINT",
          "len": 20,
          "scale": "",
          "primaryKey": true,
          "notNull": true,
          "autoIncrement": true,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "11703802-3747-4449-B7CC-D76424B2B6D5",
          "extProps": {}
        },
        {
          "defKey": "brand_id",
          "defName": "品牌id",
          "comment": "",
          "domain": "",
          "type": "BIGINT",
          "len": 20,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "73FB98D3-D3EC-4843-8B90-CDC97929A448",
          "extProps": {}
        },
        {
          "defKey": "category_id",
          "defName": "分类id",
          "comment": "",
          "domain": "",
          "type": "BIGINT",
          "len": 20,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "27897819-FF6B-4818-A0F0-92CD5F2E9F37",
          "extProps": {}
        },
        {
          "defKey": "brand_name",
          "defName": "品牌名称",
          "comment": "",
          "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
          "type": "VARCHAR",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "66FD44A7-794C-4CE1-ADC0-F35896567504",
          "extProps": {}
        },
        {
          "defKey": "category_name",
          "defName": "分类名称",
          "comment": "",
          "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
          "type": "VARCHAR",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "B533FEE4-9820-478F-B06E-DA57DD33088F",
          "extProps": {}
        },
        {
          "defKey": "create_by",
          "defName": "创建者",
          "comment": "",
          "domain": "",
          "type": "VARCHAR",
          "len": 64,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "5DF1C403-1D38-40E8-9CE6-874501925D4B",
          "extProps": {}
        },
        {
          "defKey": "update_by",
          "defName": "更新者",
          "comment": "",
          "domain": "",
          "type": "VARCHAR",
          "len": 64,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "C2DD2321-1839-467C-83B4-7DA69D801BA5",
          "extProps": {}
        },
        {
          "defKey": "create_time",
          "defName": "创建时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "type": "DATETIME",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "2BFA7218-7532-401D-9D81-060A298B4290",
          "extProps": {}
        },
        {
          "defKey": "update_time",
          "defName": "更新时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "type": "DATETIME",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "D09BC802-ED18-4F98-AC61-E179C81A1C0C",
          "extProps": {}
        }
      ],
      "indexes": [],
      "nameTemplate": "{defKey}[{defName}]",
      "headers": [
        {
          "freeze": false,
          "refKey": "hideInGraph",
          "hideInGraph": true
        },
        {
          "freeze": true,
          "refKey": "defKey",
          "hideInGraph": false
        },
        {
          "freeze": true,
          "refKey": "defName",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "primaryKey",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "notNull",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "autoIncrement",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "domain",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "type",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "len",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "scale",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "comment",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "refDict",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "defaultValue",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "isStandard",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "uiHint",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "extProps",
          "hideInGraph": true
        }
      ],
      "correlations": []
    },
    {
      "id": "9287D249-A1DE-4BE3-9D2E-81DA7596E686",
      "defKey": "pms_comment_replay",
      "defName": "商品评价回复关系",
      "comment": "",
      "properties": {},
      "fields": [
        {
          "defKey": "id",
          "defName": "id",
          "comment": "",
          "domain": "",
          "type": "BIGINT",
          "len": 20,
          "scale": "",
          "primaryKey": true,
          "notNull": true,
          "autoIncrement": true,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "4D2BF475-E5B2-47A1-9EF7-2AE1BE54A399",
          "extProps": {}
        },
        {
          "defKey": "comment_id",
          "defName": "评论id",
          "comment": "",
          "domain": "",
          "type": "BIGINT",
          "len": 20,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "F164C5D4-5EF4-4874-9DBC-5738B490FF20",
          "extProps": {}
        },
        {
          "defKey": "replay_id",
          "defName": "回复id",
          "comment": "",
          "domain": "",
          "type": "BIGINT",
          "len": 20,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "6B14BE7A-FA91-438B-948A-345D09445397",
          "extProps": {}
        },
        {
          "defKey": "create_by",
          "defName": "创建者",
          "comment": "",
          "domain": "",
          "type": "VARCHAR",
          "len": 64,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "CDA6ED0F-6F23-437B-A7EA-13DAF2BFFCAA",
          "extProps": {}
        },
        {
          "defKey": "update_by",
          "defName": "更新者",
          "comment": "",
          "domain": "",
          "type": "VARCHAR",
          "len": 64,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "2F310D20-24E2-4382-96A8-CC7912BDFBA0",
          "extProps": {}
        },
        {
          "defKey": "create_time",
          "defName": "创建时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "type": "DATETIME",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "6BC29A5A-DC15-482D-A970-FE0BA655541E",
          "extProps": {}
        },
        {
          "defKey": "update_time",
          "defName": "更新时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "type": "DATETIME",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "7FFD2DD7-1944-41FE-9061-0571025BBA5E",
          "extProps": {}
        }
      ],
      "indexes": [],
      "nameTemplate": "{defKey}[{defName}]",
      "headers": [
        {
          "freeze": false,
          "refKey": "hideInGraph",
          "hideInGraph": true
        },
        {
          "freeze": true,
          "refKey": "defKey",
          "hideInGraph": false
        },
        {
          "freeze": true,
          "refKey": "defName",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "primaryKey",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "notNull",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "autoIncrement",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "domain",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "type",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "len",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "scale",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "comment",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "refDict",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "defaultValue",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "isStandard",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "uiHint",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "extProps",
          "hideInGraph": true
        }
      ],
      "correlations": []
    },
    {
      "id": "57997F68-0AB2-4A56-8C05-42DF656F0D4C",
      "defKey": "pms_sku_attr_value",
      "defName": "sku销售属性&值",
      "comment": "",
      "properties": {},
      "fields": [
        {
          "defKey": "id",
          "defName": "id",
          "comment": "",
          "domain": "",
          "type": "BIGINT",
          "len": 20,
          "scale": "",
          "primaryKey": true,
          "notNull": true,
          "autoIncrement": true,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "45E51F2A-F545-46D4-9411-028126753066",
          "extProps": {}
        },
        {
          "defKey": "sku_id",
          "defName": "sku_id",
          "comment": "",
          "domain": "",
          "type": "BIGINT",
          "len": 20,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "AD3F64C8-2CC2-4ECE-B7CB-74602272FCC5",
          "extProps": {}
        },
        {
          "defKey": "attr_id",
          "defName": "attr_id",
          "comment": "",
          "domain": "",
          "type": "BIGINT",
          "len": 20,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "9BF283DE-0132-4112-AA06-218AAA0CB86F",
          "extProps": {}
        },
        {
          "defKey": "name",
          "defName": "销售属性名",
          "comment": "",
          "domain": "",
          "type": "VARCHAR",
          "len": 200,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "1B247BF6-ED79-4DAA-853F-232236526B53",
          "extProps": {}
        },
        {
          "defKey": "value",
          "defName": "销售属性值",
          "comment": "",
          "domain": "",
          "type": "VARCHAR",
          "len": 200,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "164216EB-5975-4A45-80A1-6CA57B0C1EF2",
          "extProps": {}
        },
        {
          "defKey": "sort",
          "defName": "顺序",
          "comment": "",
          "domain": "",
          "type": "INT",
          "len": 11,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "2E8650EB-C6D3-40A5-A286-D55619E1EE04",
          "extProps": {}
        },
        {
          "defKey": "create_by",
          "defName": "创建者",
          "comment": "",
          "domain": "",
          "type": "VARCHAR",
          "len": 64,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "A32C0F5C-BCFA-4DAE-B20F-1BF9E1646BF9",
          "extProps": {}
        },
        {
          "defKey": "update_by",
          "defName": "更新者",
          "comment": "",
          "domain": "",
          "type": "VARCHAR",
          "len": 64,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "8CFECCCF-49F9-4FCA-8C12-369920004811",
          "extProps": {}
        },
        {
          "defKey": "create_time",
          "defName": "创建时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "type": "DATETIME",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "98D9BD8A-3A31-458A-9676-D5CC1FB366C8",
          "extProps": {}
        },
        {
          "defKey": "update_time",
          "defName": "更新时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "type": "DATETIME",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "E2775C84-7F88-4E37-9DD1-6DF2827D8BAC",
          "extProps": {}
        }
      ],
      "indexes": [],
      "nameTemplate": "{defKey}[{defName}]",
      "headers": [
        {
          "freeze": false,
          "refKey": "hideInGraph",
          "hideInGraph": true
        },
        {
          "freeze": true,
          "refKey": "defKey",
          "hideInGraph": false
        },
        {
          "freeze": true,
          "refKey": "defName",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "primaryKey",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "notNull",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "autoIncrement",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "domain",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "type",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "len",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "scale",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "comment",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "refDict",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "defaultValue",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "isStandard",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "uiHint",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "extProps",
          "hideInGraph": true
        }
      ],
      "correlations": []
    },
    {
      "id": "1B1912AF-3020-4C7F-927B-D71CC515DB33",
      "defKey": "pms_sku_image",
      "defName": "sku图片",
      "comment": "",
      "properties": {},
      "fields": [
        {
          "defKey": "sku_image_id",
          "defName": "id",
          "comment": "",
          "domain": "",
          "type": "BIGINT",
          "len": 20,
          "scale": "",
          "primaryKey": true,
          "notNull": true,
          "autoIncrement": true,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "15923A4C-5D17-4947-8037-BD89A86011EE",
          "extProps": {}
        },
        {
          "defKey": "sku_id",
          "defName": "sku_id",
          "comment": "",
          "domain": "",
          "type": "BIGINT",
          "len": 20,
          "scale": "",
          "primaryKey": false,
          "notNull": true,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "18BDC5B3-9839-4CF0-B2B6-E3BC6FF5CD82",
          "extProps": {}
        },
        {
          "defKey": "url",
          "defName": "图片地址",
          "comment": "",
          "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
          "type": "VARCHAR",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "B4EAB0FF-6431-450F-A56F-6C0A883ADF9A",
          "extProps": {}
        },
        {
          "defKey": "sort",
          "defName": "排序",
          "comment": "",
          "domain": "",
          "type": "INT",
          "len": 11,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "0F77CA33-157E-4FA0-A3C5-9E659FA665C7",
          "extProps": {}
        },
        {
          "defKey": "default_image",
          "defName": "默认图[0",
          "comment": "- 不是默认图，1 - 是默认图]",
          "domain": "",
          "type": "TINYINT",
          "len": 4,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "BBE06B54-890A-4806-A616-7A5178CD3F83",
          "extProps": {}
        },
        {
          "defKey": "create_by",
          "defName": "创建者",
          "comment": "",
          "domain": "",
          "type": "VARCHAR",
          "len": 64,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "76D27E86-B49C-4A6D-B2A8-654925335521",
          "extProps": {}
        },
        {
          "defKey": "update_by",
          "defName": "更新者",
          "comment": "",
          "domain": "",
          "type": "VARCHAR",
          "len": 64,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "611B0E74-9604-47BC-830B-26705ED09F0E",
          "extProps": {}
        },
        {
          "defKey": "create_time",
          "defName": "创建时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "type": "DATETIME",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "03BC5D19-C3A8-4CFC-A832-E7F9087C9AB9",
          "extProps": {}
        },
        {
          "defKey": "update_time",
          "defName": "更新时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "type": "DATETIME",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "25E2ED6F-D84A-400E-956E-07CA675C5DAF",
          "extProps": {}
        }
      ],
      "indexes": [],
      "nameTemplate": "{defKey}[{defName}]",
      "headers": [
        {
          "freeze": false,
          "refKey": "hideInGraph",
          "hideInGraph": true
        },
        {
          "freeze": true,
          "refKey": "defKey",
          "hideInGraph": false
        },
        {
          "freeze": true,
          "refKey": "defName",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "primaryKey",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "notNull",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "autoIncrement",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "domain",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "type",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "len",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "scale",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "comment",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "refDict",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "defaultValue",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "isStandard",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "uiHint",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "extProps",
          "hideInGraph": true
        }
      ],
      "correlations": []
    },
    {
      "id": "A240EB06-BDE8-44CC-84BA-D73387D94C88",
      "defKey": "pms_sku_info",
      "defName": "sku信息",
      "comment": "",
      "properties": {},
      "fields": [
        {
          "defKey": "sku_id",
          "defName": "skuId",
          "comment": "",
          "domain": "",
          "type": "BIGINT",
          "len": 20,
          "scale": "",
          "primaryKey": true,
          "notNull": true,
          "autoIncrement": true,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "081E748F-B189-417E-8998-6C94D3EFE762",
          "extProps": {}
        },
        {
          "defKey": "spu_id",
          "defName": "spuId",
          "comment": "",
          "domain": "",
          "type": "BIGINT",
          "len": 20,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "B14CC54F-8CB2-465D-9981-28F24CB2CF44",
          "extProps": {}
        },
        {
          "defKey": "name",
          "defName": "sku名称",
          "comment": "",
          "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
          "type": "VARCHAR",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "63DED7F0-B257-4082-81C2-4B4D96C59B5F",
          "extProps": {}
        },
        {
          "defKey": "description",
          "defName": "sku介绍描述",
          "comment": "",
          "domain": "",
          "type": "VARCHAR",
          "len": 2000,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "FC238379-291E-49AD-8C32-263B335FBA4A",
          "extProps": {}
        },
        {
          "defKey": "category_id",
          "defName": "所属分类id",
          "comment": "",
          "domain": "",
          "type": "BIGINT",
          "len": 20,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "3E432544-5839-4AA5-84D5-31D9F343EDF6",
          "extProps": {}
        },
        {
          "defKey": "brand_id",
          "defName": "品牌id",
          "comment": "",
          "domain": "",
          "type": "BIGINT",
          "len": 20,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "FFAE3932-4F60-4E10-A35C-32035B081A28",
          "extProps": {}
        },
        {
          "defKey": "default_img",
          "defName": "默认图片",
          "comment": "",
          "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
          "type": "VARCHAR",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "6FCB5130-DEA4-498A-A306-13491308C055",
          "extProps": {}
        },
        {
          "defKey": "title",
          "defName": "标题",
          "comment": "",
          "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
          "type": "VARCHAR",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "4E6394BA-42CA-49C5-B42C-49B4DAE18388",
          "extProps": {}
        },
        {
          "defKey": "subtitle",
          "defName": "副标题",
          "comment": "",
          "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
          "type": "VARCHAR",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "A75E2697-8250-49AB-8957-C0B1DCF57CED",
          "extProps": {}
        },
        {
          "defKey": "price",
          "defName": "价格",
          "comment": "",
          "domain": "",
          "type": "DECIMAL",
          "len": 18,
          "scale": 4,
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "D4E3C4DB-EFE4-4B0C-9E9A-6DA2D62E4F35",
          "extProps": {}
        },
        {
          "defKey": "sale_count",
          "defName": "销量",
          "comment": "",
          "domain": "",
          "type": "BIGINT",
          "len": 20,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "5A2033C1-5603-41F4-8F16-EBB0F3150CB9",
          "extProps": {}
        },
        {
          "defKey": "create_by",
          "defName": "创建者",
          "comment": "",
          "domain": "",
          "type": "VARCHAR",
          "len": 64,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "EF4B704D-7FC0-4731-A283-58EDC58E2D97",
          "extProps": {}
        },
        {
          "defKey": "update_by",
          "defName": "更新者",
          "comment": "",
          "domain": "",
          "type": "VARCHAR",
          "len": 64,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "FBCB2A15-EB2E-4722-B6CD-2CB763B70670",
          "extProps": {}
        },
        {
          "defKey": "create_time",
          "defName": "创建时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "type": "DATETIME",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "refDict": "",
          "id": "DCC0F5A2-1EB1-4D3D-B387-B95C656E31AF",
          "extProps": {}
        },
        {
          "defKey": "update_time",
          "defName": "更新时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "type": "DATETIME",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "refDict": "",
          "id": "EF6D0CDA-F370-4560-9EE0-7EAED0EA9372",
          "extProps": {}
        }
      ],
      "indexes": [],
      "nameTemplate": "{defKey}[{defName}]",
      "headers": [
        {
          "freeze": false,
          "refKey": "hideInGraph",
          "hideInGraph": true
        },
        {
          "freeze": true,
          "refKey": "defKey",
          "hideInGraph": false
        },
        {
          "freeze": true,
          "refKey": "defName",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "primaryKey",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "notNull",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "autoIncrement",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "domain",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "type",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "len",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "scale",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "comment",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "refDict",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "defaultValue",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "isStandard",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "uiHint",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "extProps",
          "hideInGraph": true
        }
      ],
      "correlations": []
    },
    {
      "id": "9DDE994C-70D3-424F-87A8-43EA6851C806",
      "defKey": "pms_spu_attr_value",
      "defName": "spu属性值",
      "comment": "",
      "properties": {},
      "fields": [
        {
          "defKey": "id",
          "defName": "id",
          "comment": "",
          "domain": "",
          "type": "BIGINT",
          "len": 20,
          "scale": "",
          "primaryKey": true,
          "notNull": true,
          "autoIncrement": true,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "2EB66C45-765A-4BD6-ADD2-14AFBF3B4738",
          "extProps": {}
        },
        {
          "defKey": "spu_id",
          "defName": "商品id",
          "comment": "",
          "domain": "",
          "type": "BIGINT",
          "len": 20,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "D9B0FCA6-CED8-468A-A802-D42DD2FD6CB3",
          "extProps": {}
        },
        {
          "defKey": "attr_id",
          "defName": "属性id",
          "comment": "",
          "domain": "",
          "type": "BIGINT",
          "len": 20,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "B12BD642-47D6-4D5A-95C4-4A546B45E5F1",
          "extProps": {}
        },
        {
          "defKey": "name",
          "defName": "属性名",
          "comment": "",
          "domain": "",
          "type": "VARCHAR",
          "len": 200,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "3AB13D27-FA08-49FD-8FBE-784C060AA07D",
          "extProps": {}
        },
        {
          "defKey": "value",
          "defName": "属性值",
          "comment": "",
          "domain": "",
          "type": "VARCHAR",
          "len": 200,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "6B75D278-2DE2-4728-911A-A719128674EB",
          "extProps": {}
        },
        {
          "defKey": "sort",
          "defName": "顺序",
          "comment": "",
          "domain": "",
          "type": "INT",
          "len": 11,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "EB2F7856-DE0A-4AB1-A4C0-36637B8679A3",
          "extProps": {}
        },
        {
          "defKey": "quick_show",
          "defName": "快速展示【是否展示在介绍上；0-否",
          "comment": "1-是】",
          "domain": "",
          "type": "TINYINT",
          "len": 4,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "B1713772-D99B-42C1-9DD9-1CAF3F8BF196",
          "extProps": {}
        },
        {
          "defKey": "create_by",
          "defName": "创建者",
          "comment": "",
          "domain": "",
          "type": "VARCHAR",
          "len": 64,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "DAC8E8A4-E4F4-4CC3-98B0-4A1DBCE505F3",
          "extProps": {}
        },
        {
          "defKey": "update_by",
          "defName": "更新者",
          "comment": "",
          "domain": "",
          "type": "VARCHAR",
          "len": 64,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "2F061CA8-64D4-4725-85D7-95D616EEFCFB",
          "extProps": {}
        },
        {
          "defKey": "create_time",
          "defName": "创建时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "type": "DATETIME",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "DA09B97B-2E6B-4833-87FB-B4BE6B6D2A80",
          "extProps": {}
        },
        {
          "defKey": "update_time",
          "defName": "更新时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "type": "DATETIME",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "8A1872B2-2912-4282-9A55-47067A1AE076",
          "extProps": {}
        }
      ],
      "indexes": [],
      "nameTemplate": "{defKey}[{defName}]",
      "headers": [
        {
          "freeze": false,
          "refKey": "hideInGraph",
          "hideInGraph": true
        },
        {
          "freeze": true,
          "refKey": "defKey",
          "hideInGraph": false
        },
        {
          "freeze": true,
          "refKey": "defName",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "primaryKey",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "notNull",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "autoIncrement",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "domain",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "type",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "len",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "scale",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "comment",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "refDict",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "defaultValue",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "isStandard",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "uiHint",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "extProps",
          "hideInGraph": true
        }
      ],
      "correlations": []
    },
    {
      "id": "EF92D079-8138-472E-BC8D-8F986ACDEF29",
      "defKey": "pms_spu_comment",
      "defName": "商品评价",
      "comment": "",
      "properties": {},
      "fields": [
        {
          "defKey": "id",
          "defName": "id",
          "comment": "",
          "domain": "",
          "type": "BIGINT",
          "len": 20,
          "scale": "",
          "primaryKey": true,
          "notNull": true,
          "autoIncrement": true,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "A4AE57E1-8A60-44CD-BD5E-EA668095D76E",
          "extProps": {}
        },
        {
          "defKey": "sku_id",
          "defName": "sku_id",
          "comment": "",
          "domain": "",
          "type": "BIGINT",
          "len": 20,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "9ED6E295-E303-4999-B3C0-8AA5D0FF966D",
          "extProps": {}
        },
        {
          "defKey": "spu_id",
          "defName": "spu_id",
          "comment": "",
          "domain": "",
          "type": "BIGINT",
          "len": 20,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "447E6F7B-1048-463D-A09A-05CBFE13B2EB",
          "extProps": {}
        },
        {
          "defKey": "spu_name",
          "defName": "商品名字",
          "comment": "",
          "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
          "type": "VARCHAR",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "308CC041-DC8B-4A86-A126-BB252743CDF4",
          "extProps": {}
        },
        {
          "defKey": "member_nick_name",
          "defName": "会员昵称",
          "comment": "",
          "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
          "type": "VARCHAR",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "8C5E021B-A829-4C20-8E7A-AE00A63E0162",
          "extProps": {}
        },
        {
          "defKey": "star",
          "defName": "星级",
          "comment": "",
          "domain": "",
          "type": "BIT",
          "len": 1,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "1B1BC9F2-2363-4BEE-BDDF-A708FD9B5AEA",
          "extProps": {}
        },
        {
          "defKey": "member_ip",
          "defName": "会员ip",
          "comment": "",
          "domain": "",
          "type": "VARCHAR",
          "len": 64,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "73EE9E18-B19C-4F7D-965C-83C6C0244C80",
          "extProps": {}
        },
        {
          "defKey": "show_status",
          "defName": "显示状态[0-不显示",
          "comment": "1-显示]",
          "domain": "",
          "type": "BIT",
          "len": 1,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "C0C0F5B5-5448-4659-88C5-506F58BABBC3",
          "extProps": {}
        },
        {
          "defKey": "spu_attributes",
          "defName": "购买时属性组合",
          "comment": "",
          "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
          "type": "VARCHAR",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "699FF858-94F7-4575-B5E9-F7D8DC03F28A",
          "extProps": {}
        },
        {
          "defKey": "likes_count",
          "defName": "点赞数",
          "comment": "",
          "domain": "",
          "type": "INT",
          "len": 11,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "2BDEDF85-97F7-4D7B-AC98-FE79A3AC510C",
          "extProps": {}
        },
        {
          "defKey": "reply_count",
          "defName": "回复数",
          "comment": "",
          "domain": "",
          "type": "INT",
          "len": 11,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "5EEC37F5-8181-4812-8F7F-911E3643CECB",
          "extProps": {}
        },
        {
          "defKey": "resources",
          "defName": "评论图片/视频[json数据；[{type:文件类型",
          "comment": "url:资源路径}]]",
          "domain": "",
          "type": "VARCHAR",
          "len": 1000,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "AAF9CF3E-4E68-40D0-85F0-82727535B342",
          "extProps": {}
        },
        {
          "defKey": "content",
          "defName": "内容",
          "comment": "",
          "domain": "",
          "type": "TEXT",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "54E007EC-CC4C-4C58-A52E-98EAD44B0A65",
          "extProps": {}
        },
        {
          "defKey": "member_avatar",
          "defName": "用户头像",
          "comment": "",
          "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
          "type": "VARCHAR",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "refDict": "",
          "id": "6ACCF08C-21F0-467E-B8AC-90F96F3DD731",
          "extProps": {}
        },
        {
          "defKey": "type",
          "defName": "评论类型[0",
          "comment": "- 对商品的直接评论，1 - 对评论的回复]",
          "domain": "",
          "type": "TINYINT",
          "len": 4,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "refDict": "",
          "id": "5A7E039B-866D-45EC-872F-9C05F3FC32F2",
          "extProps": {}
        },
        {
          "defKey": "create_by",
          "defName": "创建者",
          "comment": "",
          "domain": "",
          "type": "VARCHAR",
          "len": 64,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "refDict": "",
          "id": "EDE02D91-DF77-4B5C-9DF1-42A67F2B258B",
          "extProps": {}
        },
        {
          "defKey": "update_by",
          "defName": "更新者",
          "comment": "",
          "domain": "",
          "type": "VARCHAR",
          "len": 64,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "refDict": "",
          "id": "C6FE6178-D08D-4FAD-AD50-F940EA21E0E6",
          "extProps": {}
        },
        {
          "defKey": "create_time",
          "defName": "创建时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "type": "DATETIME",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "refDict": "",
          "id": "3A4BEF6E-6329-4132-A929-88D7B0635CD8",
          "extProps": {}
        },
        {
          "defKey": "update_time",
          "defName": "更新时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "type": "DATETIME",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": true,
          "refDict": "",
          "id": "7B24CBBF-7169-4EAD-89EC-9220FE50BAEB",
          "extProps": {}
        }
      ],
      "indexes": [],
      "nameTemplate": "{defKey}[{defName}]",
      "headers": [
        {
          "freeze": false,
          "refKey": "hideInGraph",
          "hideInGraph": true
        },
        {
          "freeze": true,
          "refKey": "defKey",
          "hideInGraph": false
        },
        {
          "freeze": true,
          "refKey": "defName",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "primaryKey",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "notNull",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "autoIncrement",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "domain",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "type",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "len",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "scale",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "comment",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "refDict",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "defaultValue",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "isStandard",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "uiHint",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "extProps",
          "hideInGraph": true
        }
      ],
      "correlations": []
    },
    {
      "id": "F5328432-F9D3-46C6-8081-CABA2002A9C6",
      "defKey": "pms_spu_image",
      "defName": "spu图片",
      "comment": "",
      "properties": {},
      "fields": [
        {
          "defKey": "id",
          "defName": "",
          "comment": null,
          "domain": "",
          "type": "BIGINT",
          "len": 20,
          "scale": "",
          "primaryKey": true,
          "notNull": true,
          "autoIncrement": true,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "82C826DC-A7CE-4399-A4EA-147DDA022E5A",
          "extProps": {}
        },
        {
          "defKey": "spu_id",
          "defName": "spu_id",
          "comment": "",
          "domain": "",
          "type": "BIGINT",
          "len": 20,
          "scale": "",
          "primaryKey": false,
          "notNull": true,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "E7C66BD6-C769-473F-979A-D714A4D479BA",
          "extProps": {}
        },
        {
          "defKey": "name",
          "defName": "图片名",
          "comment": "",
          "domain": "",
          "type": "VARCHAR",
          "len": 200,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "74C792CB-7822-45CD-8824-4F6F3D432548",
          "extProps": {}
        },
        {
          "defKey": "url",
          "defName": "图片地址",
          "comment": "",
          "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
          "type": "VARCHAR",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "16E674A0-C15E-4DF1-959A-9C0ABD8A9FA7",
          "extProps": {}
        },
        {
          "defKey": "sort",
          "defName": "顺序",
          "comment": "",
          "domain": "",
          "type": "INT",
          "len": 11,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "180C5399-0FEA-4714-BDC9-9302D6517F23",
          "extProps": {}
        },
        {
          "defKey": "default_image",
          "defName": "是否默认图",
          "comment": "",
          "domain": "",
          "type": "TINYINT",
          "len": 4,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "28DD882D-13E3-4EC1-83E0-0C630C46D142",
          "extProps": {}
        },
        {
          "defKey": "create_by",
          "defName": "创建者",
          "comment": "",
          "domain": "",
          "type": "VARCHAR",
          "len": 64,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "CE1B4C78-3990-428D-886C-4064EC7DA591",
          "extProps": {}
        },
        {
          "defKey": "update_by",
          "defName": "更新者",
          "comment": "",
          "domain": "",
          "type": "VARCHAR",
          "len": 64,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "9D55E3D4-01B2-49CB-8285-8B905E2C232E",
          "extProps": {}
        },
        {
          "defKey": "create_time",
          "defName": "创建时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "type": "DATETIME",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "19AEE2E1-AECE-4239-8B89-5779D9316493",
          "extProps": {}
        },
        {
          "defKey": "update_time",
          "defName": "更新时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "type": "DATETIME",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "170302A7-32F1-4A12-84DD-CE34A5150DDB",
          "extProps": {}
        }
      ],
      "indexes": [],
      "nameTemplate": "{defKey}[{defName}]",
      "headers": [
        {
          "freeze": false,
          "refKey": "hideInGraph",
          "hideInGraph": true
        },
        {
          "freeze": true,
          "refKey": "defKey",
          "hideInGraph": false
        },
        {
          "freeze": true,
          "refKey": "defName",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "primaryKey",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "notNull",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "autoIncrement",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "domain",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "type",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "len",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "scale",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "comment",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "refDict",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "defaultValue",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "isStandard",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "uiHint",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "extProps",
          "hideInGraph": true
        }
      ],
      "correlations": []
    },
    {
      "id": "6139AC08-0EE9-4EA8-9A84-0084A7CC4857",
      "defKey": "pms_spu_info",
      "defName": "spu信息",
      "comment": "",
      "properties": {},
      "fields": [
        {
          "defKey": "spu_id",
          "defName": "商品id",
          "comment": "",
          "domain": "",
          "type": "BIGINT",
          "len": 20,
          "scale": "",
          "primaryKey": true,
          "notNull": true,
          "autoIncrement": true,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "7C08B77F-8130-4AD8-9C33-121E6A7B8E21",
          "extProps": {}
        },
        {
          "defKey": "name",
          "defName": "商品名称",
          "comment": "",
          "domain": "",
          "type": "VARCHAR",
          "len": 200,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "904AB1F3-DD40-44C0-BD36-69E9DA4AC99D",
          "extProps": {}
        },
        {
          "defKey": "description",
          "defName": "商品描述",
          "comment": "",
          "domain": "",
          "type": "VARCHAR",
          "len": 1000,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "DE3CE4BB-8C67-4775-8D25-894CF3D0313C",
          "extProps": {}
        },
        {
          "defKey": "category_id",
          "defName": "所属分类id",
          "comment": "",
          "domain": "",
          "type": "BIGINT",
          "len": 20,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "42A570FC-1FDA-4792-AFCC-7D50BD69A3B9",
          "extProps": {}
        },
        {
          "defKey": "brand_id",
          "defName": "品牌id",
          "comment": "",
          "domain": "",
          "type": "BIGINT",
          "len": 20,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "E1A9E1CD-A4BC-46FB-8984-15E1A5F674AA",
          "extProps": {}
        },
        {
          "defKey": "weight",
          "defName": "",
          "comment": null,
          "domain": "",
          "type": "DECIMAL",
          "len": 18,
          "scale": 4,
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "5B99E042-4DF2-47F0-8EB7-EE1DB7A0C271",
          "extProps": {}
        },
        {
          "defKey": "status",
          "defName": "上架状态[0",
          "comment": "- 新建，1 - 上架，2 - 下架]",
          "domain": "",
          "type": "TINYINT",
          "len": 4,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "1D6E9752-8D24-4CE0-B4AF-52DC7412F676",
          "extProps": {}
        },
        {
          "defKey": "create_by",
          "defName": "创建者",
          "comment": "",
          "domain": "",
          "type": "VARCHAR",
          "len": 64,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "E9E61B12-CEE0-4994-9EC7-DD306FA9ADC4",
          "extProps": {}
        },
        {
          "defKey": "update_by",
          "defName": "更新者",
          "comment": "",
          "domain": "",
          "type": "VARCHAR",
          "len": 64,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "7ED6817F-B01B-47D5-AC89-ACB9513B00CE",
          "extProps": {}
        },
        {
          "defKey": "create_time",
          "defName": "创建时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "type": "DATETIME",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "14A14F43-9F51-4C57-A6B2-D93CE3159F10",
          "extProps": {}
        },
        {
          "defKey": "update_time",
          "defName": "更新时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "type": "DATETIME",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "19BD0BFE-5123-47AC-9FAB-E76BFCCDF0AA",
          "extProps": {}
        }
      ],
      "indexes": [],
      "nameTemplate": "{defKey}[{defName}]",
      "headers": [
        {
          "freeze": false,
          "refKey": "hideInGraph",
          "hideInGraph": true
        },
        {
          "freeze": true,
          "refKey": "defKey",
          "hideInGraph": false
        },
        {
          "freeze": true,
          "refKey": "defName",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "primaryKey",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "notNull",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "autoIncrement",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "domain",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "type",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "len",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "scale",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "comment",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "refDict",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "defaultValue",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "isStandard",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "uiHint",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "extProps",
          "hideInGraph": true
        }
      ],
      "correlations": []
    },
    {
      "id": "9977EA9A-0FAC-426F-AA5E-FD98AD443782",
      "defKey": "pms_spu_info_detail",
      "defName": "spu信息介绍",
      "comment": "",
      "properties": {},
      "fields": [
        {
          "defKey": "spu_id",
          "defName": "商品id",
          "comment": "",
          "domain": "",
          "type": "BIGINT",
          "len": 20,
          "scale": "",
          "primaryKey": true,
          "notNull": true,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "1BA0B6EB-0DF3-42FB-AB26-C452DFCE6872",
          "extProps": {}
        },
        {
          "defKey": "detail",
          "defName": "商品介绍",
          "comment": "",
          "domain": "",
          "type": "LONGTEXT",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "3A7A5189-9528-4D08-90F7-3A41E18BCF07",
          "extProps": {}
        },
        {
          "defKey": "create_by",
          "defName": "创建者",
          "comment": "",
          "domain": "",
          "type": "VARCHAR",
          "len": 64,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "4C7A5E14-1BEA-4582-9FD1-996203D2C798",
          "extProps": {}
        },
        {
          "defKey": "update_by",
          "defName": "更新者",
          "comment": "",
          "domain": "",
          "type": "VARCHAR",
          "len": 64,
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "9F68081A-1429-43FF-BB24-48CCC683F566",
          "extProps": {}
        },
        {
          "defKey": "create_time",
          "defName": "创建时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "type": "DATETIME",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "A94E40D3-063D-461B-A73E-7FE79F8D786B",
          "extProps": {}
        },
        {
          "defKey": "update_time",
          "defName": "更新时间",
          "comment": "",
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "type": "DATETIME",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "C5BE8630-436B-4B4E-A4FF-E2C3A56ED7B7",
          "extProps": {}
        },
        {
          "defKey": "remark",
          "defName": "备注",
          "comment": "",
          "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
          "type": "VARCHAR",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "refDict": "",
          "id": "4A1D2983-BE11-4997-B34F-82581E2B7E91",
          "extProps": {}
        }
      ],
      "indexes": [],
      "nameTemplate": "{defKey}[{defName}]",
      "headers": [
        {
          "freeze": false,
          "refKey": "hideInGraph",
          "hideInGraph": true
        },
        {
          "freeze": true,
          "refKey": "defKey",
          "hideInGraph": false
        },
        {
          "freeze": true,
          "refKey": "defName",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "primaryKey",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "notNull",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "autoIncrement",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "domain",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "type",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "len",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "scale",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "comment",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "refDict",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "defaultValue",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "isStandard",
          "hideInGraph": false
        },
        {
          "freeze": false,
          "refKey": "uiHint",
          "hideInGraph": true
        },
        {
          "freeze": false,
          "refKey": "extProps",
          "hideInGraph": true
        }
      ],
      "correlations": []
    }
  ],
  "views": [],
  "dicts": [
    {
      "defKey": "Gender",
      "defName": "性别",
      "intro": "",
      "items": [
        {
          "defKey": "M",
          "defName": "男",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "sort": "1",
          "id": "3622D417-DA1A-408F-BEE1-11D328D534A0"
        },
        {
          "defKey": "F",
          "defName": "女",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "sort": "2",
          "id": "380A0790-64A7-481E-831C-32F7BEE1502B"
        },
        {
          "defKey": "U",
          "defName": "未知",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "sort": "3",
          "id": "FA239F4D-1276-40D9-B230-F66BD35C3C27"
        }
      ],
      "id": "BF9E20E0-80D3-486D-BD58-5FADCF3E4A1D"
    },
    {
      "defKey": "Political",
      "defName": "政治面貌",
      "intro": "",
      "items": [
        {
          "defKey": "10",
          "defName": "共青团员",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "id": "61F3145A-7599-4CCB-B298-D5EE788107BE"
        },
        {
          "defKey": "20",
          "defName": "中共党员",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "id": "ED16D25A-AB2F-4FA0-BB48-2B9031FA28C4"
        },
        {
          "defKey": "30",
          "defName": "民主党派",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "id": "0FB7974A-AE11-438F-86E0-B163316F9272"
        },
        {
          "defKey": "40",
          "defName": "群众",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "id": "7D247234-7E97-45B1-8C56-4A17A370854A"
        },
        {
          "defKey": "90",
          "defName": "未知",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "id": "DA65D752-AF04-4A11-81D8-14A38692A64A"
        }
      ],
      "id": "06EED564-BBA9-4747-8D73-AF809A330CB8"
    },
    {
      "defKey": "Marital",
      "defName": "婚姻状况",
      "intro": "婚姻状况的码表",
      "items": [
        {
          "defKey": "UNMARRIED",
          "defName": "未婚",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "sort": "1",
          "id": "20EE81BC-74EE-47DA-A56F-9663B23F44BD"
        },
        {
          "defKey": "MARRIED",
          "defName": "已婚",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "sort": "2",
          "id": "4DCA10A8-417E-4A8D-BDF6-0A278C060ADC"
        },
        {
          "defKey": "WIDOWED",
          "defName": "丧偶",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "sort": "3",
          "id": "826062A7-057C-4892-B338-06459F5B808D"
        },
        {
          "defKey": "DIVORCE",
          "defName": "离婚",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "sort": "4",
          "id": "B23200B4-5E59-4F5E-A779-D981A040FA32"
        },
        {
          "defKey": "UNSPECIFIED",
          "defName": "未说明",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "sort": "5",
          "id": "A7928FE2-349A-4702-9682-2EF7205E077B"
        }
      ],
      "id": "EA1587B7-3954-437A-BFE0-FCB0453BCABA"
    },
    {
      "defKey": "StudentStatus",
      "defName": "学生状态",
      "intro": "",
      "items": [
        {
          "defKey": "Normal",
          "defName": "正常",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "sort": "1",
          "id": "E9CA1CC9-8851-4F6B-86BA-B9CF0E44EB73"
        },
        {
          "defKey": "Graduated",
          "defName": "毕业",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "sort": "2",
          "id": "DEC51D7C-99DF-430C-817D-0499862D3CCC"
        },
        {
          "defKey": "Studied",
          "defName": "肄业",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "sort": "3",
          "id": "8853D6B6-75D3-4479-9006-FC731CD85B20"
        },
        {
          "defKey": "Stop",
          "defName": "休学",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "sort": "4",
          "id": "C74BA8CF-1DC6-4C79-BAAC-F11EB9C6AF01"
        }
      ],
      "id": "4642BC5F-02EE-4E17-A60C-CF22F86A0282"
    },
    {
      "defKey": "GBNation",
      "defName": "民族",
      "intro": "",
      "items": [
        {
          "defKey": "01",
          "defName": "汉族",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "id": "9224DF53-F7C0-447D-B8ED-0A39F799EE19"
        },
        {
          "defKey": "02",
          "defName": "蒙古族",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "id": "D57818E3-9206-45BB-AE79-27C64A4AB80F"
        },
        {
          "defKey": "03",
          "defName": "回族",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "id": "0A1A3CA9-6D68-4E15-8BD0-9A2FF428D804"
        },
        {
          "defKey": "04",
          "defName": "藏族",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "id": "7CC6B6BE-47EA-460E-ACFA-C377468DEA11"
        },
        {
          "defKey": "05",
          "defName": "维吾尔族",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "id": "A666D51F-D249-4FAC-B1F3-78C371836CB3"
        },
        {
          "defKey": "06",
          "defName": "苗族",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "id": "A0C9E1BA-D87B-4695-ADFA-287FDA32BB5A"
        },
        {
          "defKey": "07",
          "defName": "彝族",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "id": "149B5B9E-C1D1-4790-8CCF-0ED5F4B25172"
        },
        {
          "defKey": "08",
          "defName": "壮族",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "id": "F9A3E65C-BF4D-4C6B-ADB7-8C9CF0487360"
        },
        {
          "defKey": "09",
          "defName": "布依族",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "id": "14F17DE4-E96A-460B-98A6-F84EC8CF9885"
        },
        {
          "defKey": "10",
          "defName": "朝鲜族",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "id": "8A81AB18-B1BF-4797-A6E5-DEDB2C6566B0"
        },
        {
          "defKey": "11",
          "defName": "满族",
          "intro": "",
          "parentKey": "",
          "enabled": true,
          "attr1": "",
          "attr2": "",
          "attr3": "",
          "id": "7D460947-FBD2-4E4D-8366-3B38DCAF09D1"
        }
      ],
      "id": "115EDEFC-0323-410E-81AB-CCAB8879837A"
    },
    {
      "defKey": "GradeLevel",
      "defName": "受教育程度",
      "sort": "",
      "intro": "",
      "items": [],
      "id": "9E7C9788-B805-4C7D-8531-FD1D9DC79B05"
    }
  ],
  "viewGroups": [],
  "dataTypeMapping": {
    "referURL": "",
    "mappings": [
      {
        "defKey": "string",
        "id": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
        "defName": "字串",
        "29D1CE08-4C35-4D2D-AAA9-23D93305B52E": "VARCHAR",
        "A4E23CB7-BB01-4BD1-9F71-F73F3E15A542": "VARCHAR2",
        "BFC87171-C74F-494A-B7C2-76B9C55FACC9": "VARCHAR",
        "DFBEC1DD-AA84-456E-BBF3-C95DD0DB2022": "VARCHAR",
        "89504F5D-94BF-4C9E-8B2E-44F37305FED5": "VARCHAR",
        "0BBCABA5-B8E4-41B0-B8E4-8F5EA6029307": "VARCHAR2",
        "592C7013-143D-4E7B-AF64-0D7BF1E28230": "VARCHAR",
        "77BD85E5-9D0D-4096-8427-CBA306FC9C6A": "VARCHAR",
        "11D1FB71-A587-4217-89BA-611B8A1F83E0": "STRING",
        "B363BE0B-F852-49B8-9B2E-F6D2174DEAC1": "TEXT",
        "797A1496-D649-4261-89B4-544132EC3F36": "String",
        "895CFD1D-4273-4D32-A2C4-CAC70200AB5B": "String",
        "A2EE7B4A-CE62-4290-B00C-B26C1BF18073": "String",
        "F3AC2415-E86B-40C6-9FEB-F4B7937D2C30": "string",
        "81CCA482-3F4D-4EAC-8CF9-F5E7BC098AD2": "string",
        "B91D99E0-9B7C-416C-8737-B760957DAF09": "string"
      },
      {
        "defKey": "double",
        "id": "1A0BDC09-0792-4174-9E8E-80BE8DF44B8E",
        "defName": "小数",
        "29D1CE08-4C35-4D2D-AAA9-23D93305B52E": "DECIMAL",
        "A4E23CB7-BB01-4BD1-9F71-F73F3E15A542": "DECIMAL",
        "BFC87171-C74F-494A-B7C2-76B9C55FACC9": "DECIMAL",
        "DFBEC1DD-AA84-456E-BBF3-C95DD0DB2022": "NUMERIC",
        "89504F5D-94BF-4C9E-8B2E-44F37305FED5": "DECIMAL",
        "0BBCABA5-B8E4-41B0-B8E4-8F5EA6029307": "DECIMAL",
        "592C7013-143D-4E7B-AF64-0D7BF1E28230": "NUMERIC",
        "77BD85E5-9D0D-4096-8427-CBA306FC9C6A": "NUMERIC",
        "11D1FB71-A587-4217-89BA-611B8A1F83E0": "DOUBLE",
        "B363BE0B-F852-49B8-9B2E-F6D2174DEAC1": "REAL",
        "797A1496-D649-4261-89B4-544132EC3F36": "Double",
        "895CFD1D-4273-4D32-A2C4-CAC70200AB5B": "Double",
        "A2EE7B4A-CE62-4290-B00C-B26C1BF18073": "Double",
        "F3AC2415-E86B-40C6-9FEB-F4B7937D2C30": "decimal",
        "81CCA482-3F4D-4EAC-8CF9-F5E7BC098AD2": "double",
        "B91D99E0-9B7C-416C-8737-B760957DAF09": "*float64"
      },
      {
        "defKey": "int",
        "id": "1D764C4A-6F9F-421E-B11A-6F3E23B51811",
        "defName": "整数",
        "29D1CE08-4C35-4D2D-AAA9-23D93305B52E": "INT",
        "A4E23CB7-BB01-4BD1-9F71-F73F3E15A542": "INT",
        "BFC87171-C74F-494A-B7C2-76B9C55FACC9": "INT",
        "DFBEC1DD-AA84-456E-BBF3-C95DD0DB2022": "INTEGER",
        "89504F5D-94BF-4C9E-8B2E-44F37305FED5": "INT",
        "0BBCABA5-B8E4-41B0-B8E4-8F5EA6029307": "INTEGER",
        "592C7013-143D-4E7B-AF64-0D7BF1E28230": "INTEGER",
        "77BD85E5-9D0D-4096-8427-CBA306FC9C6A": "INT4",
        "11D1FB71-A587-4217-89BA-611B8A1F83E0": "INT",
        "B363BE0B-F852-49B8-9B2E-F6D2174DEAC1": "INTEGER",
        "797A1496-D649-4261-89B4-544132EC3F36": "Integer",
        "895CFD1D-4273-4D32-A2C4-CAC70200AB5B": "Integer",
        "A2EE7B4A-CE62-4290-B00C-B26C1BF18073": "Integer",
        "F3AC2415-E86B-40C6-9FEB-F4B7937D2C30": "float",
        "81CCA482-3F4D-4EAC-8CF9-F5E7BC098AD2": "int",
        "B91D99E0-9B7C-416C-8737-B760957DAF09": "*int"
      },
      {
        "defKey": "date",
        "id": "89D69E81-EA34-42EE-9FA2-93B8BD27E098",
        "defName": "日期",
        "29D1CE08-4C35-4D2D-AAA9-23D93305B52E": "DATETIME",
        "A4E23CB7-BB01-4BD1-9F71-F73F3E15A542": "DATE",
        "BFC87171-C74F-494A-B7C2-76B9C55FACC9": "DATETIME",
        "DFBEC1DD-AA84-456E-BBF3-C95DD0DB2022": "TIMESTAMP",
        "89504F5D-94BF-4C9E-8B2E-44F37305FED5": "DATE",
        "0BBCABA5-B8E4-41B0-B8E4-8F5EA6029307": "DATE",
        "592C7013-143D-4E7B-AF64-0D7BF1E28230": "DATE",
        "77BD85E5-9D0D-4096-8427-CBA306FC9C6A": "DATE",
        "11D1FB71-A587-4217-89BA-611B8A1F83E0": "DATETIME",
        "B363BE0B-F852-49B8-9B2E-F6D2174DEAC1": "NUMERIC",
        "797A1496-D649-4261-89B4-544132EC3F36": "Date",
        "895CFD1D-4273-4D32-A2C4-CAC70200AB5B": "Date",
        "A2EE7B4A-CE62-4290-B00C-B26C1BF18073": "Date",
        "F3AC2415-E86B-40C6-9FEB-F4B7937D2C30": "DateTime",
        "81CCA482-3F4D-4EAC-8CF9-F5E7BC098AD2": "timestamp",
        "B91D99E0-9B7C-416C-8737-B760957DAF09": "*time.Time"
      },
      {
        "defKey": "bytes",
        "id": "D516E75B-90F5-4741-B9B3-A186A263F04C",
        "defName": "二进制",
        "29D1CE08-4C35-4D2D-AAA9-23D93305B52E": "BLOB",
        "A4E23CB7-BB01-4BD1-9F71-F73F3E15A542": "BLOB",
        "BFC87171-C74F-494A-B7C2-76B9C55FACC9": "VARBINARY",
        "DFBEC1DD-AA84-456E-BBF3-C95DD0DB2022": "BYTEA",
        "89504F5D-94BF-4C9E-8B2E-44F37305FED5": "BLOB",
        "0BBCABA5-B8E4-41B0-B8E4-8F5EA6029307": "BLOB",
        "592C7013-143D-4E7B-AF64-0D7BF1E28230": "BYTEA",
        "77BD85E5-9D0D-4096-8427-CBA306FC9C6A": "BYTEA",
        "11D1FB71-A587-4217-89BA-611B8A1F83E0": "BINARY",
        "B363BE0B-F852-49B8-9B2E-F6D2174DEAC1": "NONE",
        "797A1496-D649-4261-89B4-544132EC3F36": "byte[]",
        "895CFD1D-4273-4D32-A2C4-CAC70200AB5B": "byte[]",
        "A2EE7B4A-CE62-4290-B00C-B26C1BF18073": "byte[]",
        "F3AC2415-E86B-40C6-9FEB-F4B7937D2C30": "binary",
        "81CCA482-3F4D-4EAC-8CF9-F5E7BC098AD2": "binary",
        "B91D99E0-9B7C-416C-8737-B760957DAF09": "[]byte"
      },
      {
        "defKey": "largeText",
        "id": "B17BDED3-085F-40E1-9019-3B79CF2BF075",
        "defName": "大文本",
        "29D1CE08-4C35-4D2D-AAA9-23D93305B52E": "TEXT",
        "A4E23CB7-BB01-4BD1-9F71-F73F3E15A542": "CLOB",
        "BFC87171-C74F-494A-B7C2-76B9C55FACC9": "TEXT",
        "DFBEC1DD-AA84-456E-BBF3-C95DD0DB2022": "TEXT",
        "89504F5D-94BF-4C9E-8B2E-44F37305FED5": "CLOB",
        "0BBCABA5-B8E4-41B0-B8E4-8F5EA6029307": "CLOB",
        "592C7013-143D-4E7B-AF64-0D7BF1E28230": "TEXT",
        "77BD85E5-9D0D-4096-8427-CBA306FC9C6A": "TEXT",
        "11D1FB71-A587-4217-89BA-611B8A1F83E0": "STRING",
        "B363BE0B-F852-49B8-9B2E-F6D2174DEAC1": "TEXT",
        "797A1496-D649-4261-89B4-544132EC3F36": "String",
        "895CFD1D-4273-4D32-A2C4-CAC70200AB5B": "String",
        "A2EE7B4A-CE62-4290-B00C-B26C1BF18073": "String",
        "F3AC2415-E86B-40C6-9FEB-F4B7937D2C30": "string",
        "81CCA482-3F4D-4EAC-8CF9-F5E7BC098AD2": "string",
        "B91D99E0-9B7C-416C-8737-B760957DAF09": "string"
      }
    ]
  },
  "domains": [
    {
      "defKey": "DefaultString",
      "defName": "默认字串",
      "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
      "len": 255,
      "scale": "",
      "uiHint": "",
      "id": "9092C4E0-1A54-4859-ABBB-5B62DBC27573"
    },
    {
      "defKey": "IdOrKey",
      "defName": "主键标识",
      "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
      "len": 32,
      "scale": "",
      "uiHint": "",
      "id": "16120F75-6AA7-4483-868D-F07F511BB081"
    },
    {
      "defKey": "Name",
      "defName": "名称",
      "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
      "len": 90,
      "scale": "",
      "uiHint": "",
      "id": "54611CCC-CA4B-42E1-9F32-4944C85B85A6"
    },
    {
      "defKey": "Int",
      "defName": "整数",
      "applyFor": "1D764C4A-6F9F-421E-B11A-6F3E23B51811",
      "len": "",
      "scale": "",
      "uiHint": "",
      "id": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E"
    },
    {
      "defKey": "Double",
      "defName": "小数",
      "applyFor": "1A0BDC09-0792-4174-9E8E-80BE8DF44B8E",
      "len": 24,
      "scale": 6,
      "uiHint": "",
      "id": "FF4459C5-6B45-4DBF-8FC0-E06239BC05B4"
    },
    {
      "defKey": "Money",
      "defName": "金额",
      "applyFor": "1A0BDC09-0792-4174-9E8E-80BE8DF44B8E",
      "len": 24,
      "scale": 6,
      "uiHint": "",
      "id": "C3B1681B-99F9-4818-9E80-DE1652A51D85"
    },
    {
      "defKey": "DateTime",
      "defName": "日期时间",
      "applyFor": "89D69E81-EA34-42EE-9FA2-93B8BD27E098",
      "len": "",
      "scale": "",
      "uiHint": "",
      "id": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC"
    },
    {
      "defKey": "YesNo",
      "defName": "是否",
      "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
      "len": "1",
      "scale": "",
      "uiHint": "",
      "id": "6F7C1C5C-D159-41E6-BF9D-54DEEFA79AFF"
    },
    {
      "defKey": "Dict",
      "defName": "数据字典",
      "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
      "len": "32",
      "scale": "",
      "uiHint": "",
      "id": "73FD2BAD-2358-4336-B96D-45DC897BD792"
    },
    {
      "defKey": "DescText",
      "defName": "描述文本",
      "applyFor": "FC9790A7-36B8-4A48-8F9A-BC1042BCFE64",
      "len": "900",
      "scale": "",
      "uiHint": "",
      "id": "3E948CEC-3070-472C-AF92-F3CA11EC9D15"
    }
  ],
  "diagrams": [],
  "standardFields": [
    {
      "defKey": "personInfo",
      "defName": "个人基本信息要素",
      "fields": [
        {
          "defKey": "ID_CARD_NO",
          "defName": "身份证号",
          "comment": "",
          "type": "VARCHAR",
          "len": "60",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
          "refDict": "",
          "uiHint": "",
          "id": "A64A91C8-A41F-4113-92FB-7563D7EF054D"
        },
        {
          "defKey": "MOBILE_PHONE",
          "defName": "手机号",
          "comment": "",
          "type": "VARCHAR",
          "len": "60",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
          "refDict": "",
          "uiHint": "",
          "id": "479DA2AB-1974-411A-A81E-92FB939E75EB"
        },
        {
          "defKey": "GENDER",
          "defName": "性别",
          "comment": "",
          "type": "VARCHAR",
          "len": "32",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "73FD2BAD-2358-4336-B96D-45DC897BD792",
          "refDict": "BF9E20E0-80D3-486D-BD58-5FADCF3E4A1D",
          "uiHint": "",
          "id": "48473E29-6594-4912-AADE-C8AB44FCA3E9"
        },
        {
          "defKey": "BIRTH",
          "defName": "出生日期",
          "comment": "",
          "type": "DATETIME",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "7CFFA0D3-6A93-4DDC-BC10-DF21211064DC",
          "refDict": "",
          "uiHint": "",
          "id": "2BD3D2EE-2411-49A6-983D-84B81057312F"
        },
        {
          "defKey": "AVATAR",
          "defName": "头像",
          "comment": "",
          "type": "VARCHAR",
          "len": "60",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
          "refDict": "",
          "uiHint": "",
          "id": "FDD67CEE-4B52-4BD1-A1A3-9C5EBC6037E6"
        },
        {
          "defKey": "HEIGHT",
          "defName": "身高",
          "comment": "",
          "type": "INT",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
          "refDict": "",
          "uiHint": "",
          "id": "CAAA0E79-41A1-4758-B481-D171168C4D68"
        },
        {
          "defKey": "WEIGHT",
          "defName": "体重",
          "comment": "",
          "type": "INT",
          "len": "",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "6BC8F04B-6CFA-4995-98D3-318F5CDD774E",
          "refDict": "",
          "uiHint": "",
          "id": "575482CE-64A6-4CB9-99DC-8E126D190AAA"
        },
        {
          "defKey": "NATION",
          "defName": "名族",
          "comment": "",
          "type": "VARCHAR",
          "len": "32",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "73FD2BAD-2358-4336-B96D-45DC897BD792",
          "refDict": "115EDEFC-0323-410E-81AB-CCAB8879837A",
          "uiHint": "",
          "id": "15B0D75D-0B97-4985-A816-D0EAFA90446B"
        },
        {
          "defKey": "POLITICAL",
          "defName": "政治面貌",
          "comment": "",
          "type": "VARCHAR",
          "len": "32",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "73FD2BAD-2358-4336-B96D-45DC897BD792",
          "refDict": "06EED564-BBA9-4747-8D73-AF809A330CB8",
          "uiHint": "",
          "id": "F458E86D-84D6-45A1-9DD3-51E6C8170D7F"
        },
        {
          "defKey": "MARITAL",
          "defName": "婚姻状况",
          "comment": "",
          "type": "VARCHAR",
          "len": "32",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "73FD2BAD-2358-4336-B96D-45DC897BD792",
          "refDict": "EA1587B7-3954-437A-BFE0-FCB0453BCABA",
          "uiHint": "",
          "id": "7275E578-6893-4922-AC69-95B261BFBD61"
        },
        {
          "defKey": "DOMICILE_PLACE_PROVINCE",
          "defName": "籍贯（省）",
          "comment": "",
          "type": "VARCHAR",
          "len": "60",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
          "refDict": "",
          "uiHint": "",
          "id": "F04BF130-3EC1-4E02-9DED-3214CA88E352"
        },
        {
          "defKey": "DOMICILE_PLACE_CITY",
          "defName": "籍贯（市）",
          "comment": "",
          "type": "VARCHAR",
          "len": "32",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "73FD2BAD-2358-4336-B96D-45DC897BD792",
          "refDict": "",
          "uiHint": "",
          "id": "B97F5BC2-33DE-4857-9DB8-ECFD02C9040C"
        },
        {
          "defKey": "DOMICILE_PLACE_ADDRESS",
          "defName": "户籍地址",
          "comment": "",
          "type": "VARCHAR",
          "len": "60",
          "scale": "",
          "primaryKey": false,
          "notNull": false,
          "autoIncrement": false,
          "defaultValue": "",
          "hideInGraph": false,
          "domain": "9092C4E0-1A54-4859-ABBB-5B62DBC27573",
          "refDict": "",
          "uiHint": "",
          "id": "812ADF1D-8C03-40CA-B030-E539838FB889"
        }
      ],
      "id": "F30202B9-4B5D-4CE7-87CE-B3890C84D3F2"
    }
  ],
  "dbConn": [
    {
      "defKey": "AF3773F9-7354-4853-B758-3F301071347D",
      "defName": "local-product",
      "type": "29D1CE08-4C35-4D2D-AAA9-23D93305B52E",
      "properties": {
        "driver_class_name": "com.mysql.cj.jdbc.Driver",
        "url": "jdbc:mysql://127.0.0.1:3306/mall_product?characterEncoding=UTF-8&useSSL=false&useUnicode=true&serverTimezone=UTC",
        "password": "Qwz#1201",
        "username": "root"
      }
    }
  ]
}